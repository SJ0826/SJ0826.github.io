<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-04T15:07:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sometimes we fall, then we rise ⛵</title><subtitle>프론트엔드 엔지니어가 되기까지</subtitle><author><name>Sujin Kim</name></author><entry><title type="html">[Lv 1] 자연수 뒤집어 배열로 만들기 by JS</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 1] 자연수 뒤집어 배열로 만들기 by JS" /><published>2023-04-04T00:00:00+09:00</published><updated>2023-04-04T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.</p>

<ul>
  <li>n은 10,000,000,000이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">numToArr</span> <span class="o">=</span> <span class="p">[...</span><span class="nc">String</span><span class="p">(</span><span class="nx">n</span><span class="p">)].</span><span class="nf">reverse</span><span class="p">();</span> <span class="c1">// 1</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">numToArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nc">Number</span><span class="p">(</span><span class="nx">numToArr</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span> <span class="c1">// 2</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>주어진 숫자를 문자열로 바꿔 하나하나 배열의 요소로 만들어준 후 순서를 바꾼다.</li>
  <li><code class="language-plaintext highlighter-rouge">answer</code>에 <code class="language-plaintext highlighter-rouge">numToArr</code>의 요소를 숫자로 바꿔 삽입해준다.</li>
</ol>

<p>뭔가 한줄짜리 코드로 바꿀 수 있을 것 같은데 깔끔하게 답이 나오지 않아 이렇게 제출했습니다.</p>

<h2 id="-best-practice-1">👍 Best Practice 1</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">return </span><span class="p">(</span><span class="nx">n</span> <span class="o">+</span> <span class="dl">""</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="dl">""</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">reverse</span><span class="p">()</span>
    <span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">n</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nf">parseInt</span><span class="p">(</span><span class="nx">n</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>역시 한줄짜리 답안이 있네요.</p>

<p>아직 배열 내장 메소드를 쓰는 것이 그렇게 익숙하지 않은듯 합니다.</p>

<p>그런데 왜 숫자 뒤에 공백을 붙이고 split(““)을 하면 문자열로 하나하나 쪼개질까요.</p>

<p>열심히 이리저리 콘솔을 찍어본 결과 숫자 뒤에 공백(““)을 붙이면 문자열이 되기 때문이었습니다.</p>

<p>제가 했던 <code class="language-plaintext highlighter-rouge">[...String(n)]</code>과 같은 과정이네요.</p>

<h2 id="-best-practice-2">👍 Best Practice 2</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="k">do</span> <span class="p">{</span>
    <span class="nx">arr</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">n</span> <span class="o">%</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// 1</span>
    <span class="nx">n</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nf">floor</span><span class="p">(</span><span class="nx">n</span> <span class="o">/</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// 2</span>
  <span class="p">}</span> <span class="nf">while </span><span class="p">(</span><span class="nx">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 3</span>

  <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>주어진 자연수를 10으로 나누어 소수점 한자리를 나오게해 그 값을 <code class="language-plaintext highlighter-rouge">arr</code>에 넣어준다.</li>
  <li>뒤에 소수점을 하나 떨궈내고 자릿수를 하나 줄인다.</li>
  <li>n이 0이 될때까지 반복한다.</li>
</ol>

<p>세상은 이런 분들이 바꿔가는걸까요.</p>

<p>저는 어떻게든 배열 메소드를 쓰려고 했는데 이런 멋진 방법이 있습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="reverse" /><category term="split" /><category term="스택/큐" /><summary type="html"><![CDATA[자연수 뒤집어 배열로 만들기]]></summary></entry><entry><title type="html">[Lv 2] 숫자의 표현</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%88%AB%EC%9E%90%EC%9D%98-%ED%91%9C%ED%98%84/" rel="alternate" type="text/html" title="[Lv 2] 숫자의 표현" /><published>2023-04-03T00:00:00+09:00</published><updated>2023-04-03T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%88%AB%EC%9E%90%EC%9D%98%20%ED%91%9C%ED%98%84</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%88%AB%EC%9E%90%EC%9D%98-%ED%91%9C%ED%98%84/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.</p>

<ul>
  <li>1 + 2 + 3 + 4 + 5 = 15</li>
  <li>4 + 5 + 6 = 15</li>
  <li>7 + 8 = 15</li>
  <li>15 = 15</li>
</ul>

<p>자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.</p>

<ul>
  <li>n은 10,000 이하의 자연수 입니다.</li>
</ul>

<h2 id="️-나의-풀이-1">🙋‍♀️ 나의 풀이 1</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">acc</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">n</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span> <span class="nx">i</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;=</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">acc</span> <span class="o">+=</span> <span class="nx">j</span><span class="p">;</span>
      <span class="nf">if </span><span class="p">(</span><span class="nx">acc</span> <span class="o">&gt;</span> <span class="nx">n</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
      <span class="nf">if </span><span class="p">(</span><span class="nx">acc</span> <span class="o">==</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">answer</span><span class="o">++</span><span class="p">;</span>
        <span class="nx">acc</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">acc</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>처음에 for문을 돌려 연속된 수의 합을 구했는데 정확성 테스트는 통과했지만 효율성 테스트에서 모두 막혔습니다.</p>

<p>어떻게든 넘어가려고 if문에 i 조건까지 수정했는데 통과할 수 없어 풀이 과정 자체에 대해 다시 생각했습니다.</p>

<h2 id="️-나의-풀이-2">🙋‍♀️ 나의 풀이 2</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">n</span> <span class="o">%</span> <span class="nx">i</span> <span class="o">===</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="nx">answer</span><span class="o">++</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>연속된 수의 합을 구하는 방법을 찾던 중 다음과 같은 방법을 찾았습니다.</p>

<blockquote>
  <p>자연수의 소수 중 홀수의 개수는 연속된 자연수의 합이 나올 수 있는 개수와 같다.</p>
</blockquote>

<p>예를 들어,</p>

<p>15의 약수는 [1, 3, 5, 15]입니다.</p>

<ul>
  <li>1의 경우, 연속하는 1개의 자연수로 표현 가능 =&gt; 15</li>
  <li>3의 경우, 연속하는 3개의 자연수로 표현 가능 =&gt; 3+4+5</li>
  <li>5의 경우, 연속하는 5개의 자연수로 표현 가능 =&gt; 1+2+3+4+5</li>
  <li>15의 경우, 모든 홀수는 n과 n+1로 표현가능 =&gt; 7+8</li>
</ul>

<p>이 풀이에서는 공식을 사용했기 때문에 for문이 한번만 돌아가 효율성 테스트를 모두 통과할 수 있었습니다.</p>

<p>다른 문제보다 수학적 지식이 요구되었던 문제였던것 같은데 정답률(73%)이 높네요.</p>

<p>원래 수학은 졸업하면 까먹는건데…</p>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="숫자의 표현" /><summary type="html"><![CDATA[연속된 숫자의 합]]></summary></entry><entry><title type="html">객체 타입</title><link href="http://localhost:4000/typescript/typescript-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85/" rel="alternate" type="text/html" title="객체 타입" /><published>2023-04-03T00:00:00+09:00</published><updated>2023-04-03T22:06:00+09:00</updated><id>http://localhost:4000/typescript/typescript-%EA%B0%9D%EC%B2%B4%20%ED%83%80%EC%9E%85</id><content type="html" xml:base="http://localhost:4000/typescript/typescript-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85/"><![CDATA[<h2 id="-객체-타입">📄 객체 타입</h2>

<p>객체 타입이란 타입스크립트에서 <code class="language-plaintext highlighter-rouge">{속성명: 타입 명}</code>형식으로 이루어진 타입입니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">Poet</span> <span class="o">=</span> <span class="p">{</span>
  <span class="c1">// 별칭 객체 타입</span>
  <span class="na">born</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
  <span class="nl">name</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>

<span class="kd">let</span> <span class="nx">poetLater</span><span class="p">:</span> <span class="nx">Poet</span><span class="p">;</span>

<span class="nx">poetLater</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">born</span><span class="p">:</span> <span class="mi">1935</span><span class="p">,</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Mary Oliver</span><span class="dl">"</span><span class="p">,</span>
<span class="p">};</span>

<span class="nx">poetLater</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Sappho</span><span class="dl">"</span><span class="p">;</span>
<span class="c1">// Error: Type 'string' is not assignable to type '{born: numner; name: string;}</span>
</code></pre></div></div>

<h2 id="-구조적-타이핑">📄 구조적 타이핑</h2>

<p>구조적 타이핑은 <strong>실제 구조와 정의에 의해 결정되는 타입 시스템</strong>입니다.</p>

<p>런타임에 타입을 결정하는 자바스크립트의 덕 타이핑과 달리, 타입스크립트는 구조적으로 타입화합니다.</p>

<blockquote>
  <p>덕 타이핑이란? 동적 타이핑의 한 종류로 객체의 변수 및 메서드의 집합이 객체의 타입을 결정하는 것</p>
</blockquote>

<h3 id="-초과-속성-검사">▪ 초과 속성 검사</h3>

<p>초과 속성 검사는 <strong>객체 타입 속성을 검사하는 과정</strong>입니다.</p>

<p>초과 속성 검사에는 중요한 조건이 있습니다.</p>

<p><strong>“객체 리터럴을 변수에 집적 할당하는 경우에만”</strong>초과 속성 검사가 진행된다는 것입니다.</p>

<p>다음과 같은 예시에서는 객체 리터럴 <code class="language-plaintext highlighter-rouge">Poet</code>을 변수 <code class="language-plaintext highlighter-rouge">extraPerson</code>에 직접 할당했기 때문에 초과 속성 검사가 진행되어 타입 에러를 뱉습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">Person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="nx">number</span><span class="p">,</span>
<span class="p">};</span>

<span class="c1">// ok. Person필드와 일치</span>
<span class="kd">const</span> <span class="nx">Sujin</span><span class="p">:</span> <span class="nx">Person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">sujin</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">extraPerson</span><span class="p">:</span> <span class="nx">Person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">sujin</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
  <span class="na">nickName</span><span class="p">:</span> <span class="dl">"</span><span class="s2">masuri</span><span class="dl">"</span><span class="p">,</span> <span class="c1">// Error!</span>
<span class="p">};</span>
</code></pre></div></div>

<p>이번에는 중간에 변수를 거쳐서 객체리터럴를 대입해보겠습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">exisitingObject</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">sujin</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
  <span class="na">nickName</span><span class="p">:</span> <span class="dl">"</span><span class="s2">masuri</span><span class="dl">"</span><span class="p">,</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">extraPerson</span><span class="p">:</span> <span class="nx">Person</span> <span class="o">=</span> <span class="nx">existingObject</span><span class="p">;</span> <span class="c1">// ok</span>
</code></pre></div></div>

<p>객체를 다른 변수에 할당했더니, 변수 <code class="language-plaintext highlighter-rouge">existingObject</code>는 초과 속성 검사를 받지 않았기 때문에 에러가 발생하지 않습니다.</p>

<h3 id="-선택적-속성">▪ 선택적 속성</h3>

<p>선택적 속성은 에너테이션(<code class="language-plaintext highlighter-rouge">:</code>)앞에 <code class="language-plaintext highlighter-rouge">?</code>를 추가해서 선택적으로 속성을 허용할 때 사용합니다.</p>

<p>타입을 <code class="language-plaintext highlighter-rouge">undefined</code>로 선언한경우, 그 값이 <code class="language-plaintext highlighter-rouge">undefined</code>일지라도 반드시 그 값이 존재해야합니다.</p>

<p>반면, 선택적으로 선언된 속성은 존재하지 않아도 됩니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">Writer</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">author</span><span class="p">:</span> <span class="kr">string</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>
  <span class="nl">editor</span><span class="p">?:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">hasRequired</span><span class="p">:</span> <span class="nx">Writer</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">author</span><span class="p">:</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">missingRequired</span><span class="p">:</span> <span class="nx">Writer</span> <span class="o">=</span> <span class="p">{};</span>
<span class="c1">// Error: Property 'author' is missing in type '{}' but required in type 'Writers'.</span>
</code></pre></div></div>

<h2 id="-교차-타입">📄 교차 타입</h2>

<p>교차 타입은 합집합의 개념으로 이해할 수 있습니다.</p>

<p>유니언 타입이 이거 또는 저거의 개념으로 주어진 타입 중 하나의 타입만 선택하게 되는 반면에,</p>

<p>교차 타입은 서로 다른 타입이 하나의 타입으로 만들어져 여러 타입을 동시에 나타낼 수 있습니다.</p>

<p>교차 타입은 유니언 타입과 결합하여 사용할 수 있습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">ShortPoem</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">author</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">}</span> <span class="o">&amp;</span> <span class="p">({</span> <span class="na">kigo</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span> <span class="nl">type</span><span class="p">:</span> <span class="dl">"</span><span class="s2">haiku</span><span class="dl">"</span> <span class="p">}</span> <span class="o">|</span> <span class="p">{</span> <span class="na">meter</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span> <span class="nl">type</span><span class="p">:</span> <span class="dl">"</span><span class="s2">villanelle</span><span class="dl">"</span> <span class="p">});</span>

<span class="c1">// type:</span>
<span class="c1">// {author: string;  kigo: string; type: "haiku"}</span>
<span class="c1">// 또는</span>
<span class="c1">// {author: string; meter: number; type: "villanelle" }</span>
</code></pre></div></div>

<h3 id="-never">▪ never</h3>

<p>원시타입에 교차타입을 적용하는 것은 무의미한 일입니다.</p>

<p>원시타입에 교차타입을 적용하면 <strong>never</strong>라는 타입이 되는데, 이는 <strong>비어있는 타입</strong>을 뜻합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">notNumber</span><span class="p">:</span> <span class="kr">number</span> <span class="o">&amp;</span> <span class="kr">string</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="c1">// Error: Type 'number'is not assignable to type 'never'</span>
</code></pre></div></div>

<h2 id="참고">참고</h2>

<ul>
  <li>learning TypeScript</li>
  <li><a href="https://inpa.tistory.com/entry/TS-%F0%9F%93%98-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EC%B2%B4%ED%82%B9-%EC%9B%90%EB%A6%AC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0">InPa-Dev - 타입스크립트 잉여 속성 검사 원리 이해하기</a></li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="TypeScript" /><category term="객체 타입" /><category term="구조적 타이핑" /><category term="선택적 속성" /><category term="교차타입" /><category term="never" /></entry><entry><title type="html">[Leaning Typescript 🦜] various-lawyerings</title><link href="http://localhost:4000/typescript/typescript-learning-typescript-various-lawyerings/" rel="alternate" type="text/html" title="[Leaning Typescript 🦜] various-lawyerings" /><published>2023-04-03T00:00:00+09:00</published><updated>2023-04-03T22:06:00+09:00</updated><id>http://localhost:4000/typescript/typescript-learning-typescript-various-lawyerings</id><content type="html" xml:base="http://localhost:4000/typescript/typescript-learning-typescript-various-lawyerings/"><![CDATA[<h1 id="-various-lawyerings">👩‍🎓 Various Lawyerings</h1>

<blockquote>
  <p>Hello, fellow lawyer. I’m glad you’ve chosen to join me in preparing to engage in legal battle. As you can see, I require your assistance in developing TypeScript projects to manage my files for this most important case.</p>
</blockquote>

<p>안녕, 동료 변호사야.<br />
이번 법정 사건을 나와 함께 준비하기로 했다니 정말 기쁘다.<br />
보다시피, 아주 중요한 케이스를 위한 파일을 관리하는 지금 개발중인 타입스크립트 프로젝트를 너가 도와줬음 좋겠다잉.</p>

<ul>
  <li>타입 인터페이스말고, 타입 객체를 사용하세요.</li>
</ul>

<h2 id="-step-1-aviary-classification">🎓 Step 1: Aviary Classification</h2>

<blockquote>
  <p>As a world-renowned expert in bird law, it is my duty to properly educate the court on the characteristics of various birds and related bird information. I cannot uphold my critical task if my bird files are not in proper order.<br /><br />I require you to write an object type describing a Bird type for my array of birds. Please be as specific as possible for types when possible. Any property other than name whose values are strings should be a union of unions of string literals.</p>
</blockquote>

<p><strong>▪ 요약: 새 정보가 들어있는 객체 타입을 가능한 구체적으로 만들어줘. name말고도 값이 string인 프로퍼티는 string 리터럴 유니언 타입이 되어야해</strong></p>

<h3 id="-문제-코드">📄 문제 코드</h3>

<p>birds배열의 속성들이 객체로 이루어져 있습니다. 이 객체들의 타입을 지정해주어야 합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Write your Bird type here! ✨</span>
<span class="k">export</span> <span class="kd">const</span> <span class="nx">birds</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">dangerous</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">diet</span><span class="p">:</span> <span class="dl">"</span><span class="s2">omnivore</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">White-Throated Magpie-Jay</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">noisy</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">diet</span><span class="p">:</span> <span class="dl">"</span><span class="s2">omnivore</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">intelligent</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Eurasian Magpie</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">diet</span><span class="p">:</span> <span class="dl">"</span><span class="s2">carnivore</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Yellow-Billed Blue Magpie</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">noisy</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">intelligent</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">diet</span><span class="p">:</span> <span class="dl">"</span><span class="s2">omnivore</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">American Crow</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>
</code></pre></div></div>

<h3 id="-풀이과정">📄 풀이과정</h3>

<p>공통된 속성들을 빼주고 서로 다른 경우의 속성들을 유니언 타입으로 생성해 교차 타입으로 묶어주었습니다.</p>

<p>error는 없어졌지만 이게 요구사항대로 한게 맞는지 모르겠습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">Bird</span> <span class="o">=</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span> <span class="nl">diet</span><span class="p">:</span> <span class="kr">string</span> <span class="p">}</span> <span class="o">&amp;</span> <span class="p">(</span>
  <span class="o">|</span> <span class="p">{</span> <span class="na">dangerous</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span> <span class="nl">noisy</span><span class="p">:</span> <span class="nx">boolean</span> <span class="p">}</span>
  <span class="o">|</span> <span class="p">{</span> <span class="na">diet</span><span class="p">:</span> <span class="kr">string</span> <span class="p">}</span>
  <span class="o">|</span> <span class="p">{</span> <span class="na">noisy</span><span class="p">:</span> <span class="nx">boolean</span> <span class="p">}</span>
  <span class="o">|</span> <span class="p">{</span> <span class="na">intelligent</span><span class="p">:</span> <span class="nx">boolean</span> <span class="p">}</span>
<span class="p">);</span>
</code></pre></div></div>

<p>✔ 정답</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="nx">type</span> <span class="nx">Bird</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">dangerous</span><span class="p">?:</span> <span class="nx">boolean</span><span class="p">,</span>
  <span class="na">diet</span><span class="p">:</span> <span class="dl">"</span><span class="s2">carnivore</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">omnivore</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">intelligent</span><span class="p">?:</span> <span class="nx">boolean</span><span class="p">,</span>
  <span class="na">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
  <span class="nx">noisy</span><span class="p">?:</span> <span class="nx">boolean</span><span class="p">,</span>
<span class="p">};</span>
</code></pre></div></div>

<p>역시 틀렸습니다. 교차 타입말고 선택적 속성을 사용하니 훨씬 가독성있네요.</p>

<p>교차 타입을 알기 전에는 이렇게 코드를 작성했었는데 교차 타입을 공부하니 애먼곳에 얶매여 생각했습니다.</p>

<p>역시 코드는 사람이 눈으로 읽기 좋게 짜야합니다.</p>

<h2 id="-step-2-case-management">🎓 Step 2: Case Management</h2>

<blockquote>
  <p>Very good, very good. My birds are classified correctly. I thank you.<br />
Next, I have the opposite type of task for you to tackle. I have created a Case type for you and have a cases array. But, the elements in cases vary in format and do not always match up with the Case type. Please correct cases – without changing the Case type.</p>
</blockquote>

<p><strong>▪ 요약: 아주 맘에 드는구만. 이번엔 반대로 내주지. 타입 Case를 바꾸지 말고 배열 cases를 바꿔서 문제를 해결해 봐라!</strong></p>

<h2 id="-문제-코드-1">📄 문제 코드</h2>

<p>이번에는 타입을 수정하지 않고 주어진 배열 데이터인 cases를 고쳐야 합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">Case</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">state</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">federal</span><span class="dl">"</span><span class="p">;</span>
  <span class="nl">decided</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">defendant</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
  <span class="nl">id</span><span class="p">:</span> <span class="kr">string</span> <span class="o">|</span> <span class="kr">string</span><span class="p">[];</span>
  <span class="nl">plaintiff</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
  <span class="nl">title</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">cases</span><span class="p">:</span> <span class="nx">Case</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">federal</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">February 18, 1986</span><span class="dl">"</span><span class="p">),</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Glynn Batson</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">and</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Southplains Land Corporation</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">841710</span><span class="p">,</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">United States of America</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">United States v. Batson</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">state</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="dl">"</span><span class="s2">April 17, 1992</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Bradford Marine, Inc</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">id</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">90-6372-CIV</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">90-6599-CIV</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Lyn C. Noble</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Noble v. Bradford Marine, Inc</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">amusing</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">NY state</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PepsiCo, Inc.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">on</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">August 5, 1999</span><span class="dl">"</span><span class="p">),</span>
    <span class="p">},</span>
    <span class="na">ids</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">96-cv-5320</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">96-cv-9069</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">John Leonard</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Leonard v. Pepsico, Inc.</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>
</code></pre></div></div>

<h3 id="-해결-과정">📄 해결 과정</h3>

<p>주어진 타입 Case에 맞게 배열 cases를 바꾸어 주었습니다.</p>

<p>Case에 없는 속성은 아예 삭제했습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">Case</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">state</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">federal</span><span class="dl">"</span><span class="p">;</span>
  <span class="nl">decided</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="nl">defendant</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
  <span class="nl">id</span><span class="p">:</span> <span class="kr">string</span> <span class="o">|</span> <span class="kr">string</span><span class="p">[];</span>
  <span class="nl">plaintiff</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
  <span class="nl">title</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">cases</span><span class="p">:</span> <span class="nx">Case</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">federal</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">February 18, 1986</span><span class="dl">"</span><span class="p">),</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Glynn Batson and Southplains Land Corporation</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">841710</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">United States of America</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">United States v. Batson</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">state</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">1992-04-17</span><span class="dl">"</span><span class="p">),</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Bradford Marine, Inc</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">id</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">90-6372-CIV</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">90-6599-CIV</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Lyn C. Noble</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Noble v. Bradford Marine, Inc</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">court</span><span class="p">:</span> <span class="dl">"</span><span class="s2">state</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">defendant</span><span class="p">:</span> <span class="dl">"</span><span class="s2">PepsiCo, Inc.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">decided</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">August 5, 1999</span><span class="dl">"</span><span class="p">),</span>
    <span class="na">id</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">96-cv-5320</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">96-cv-9069</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">plaintiff</span><span class="p">:</span> <span class="dl">"</span><span class="s2">John Leonard</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Leonard v. Pepsico, Inc.</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>
</code></pre></div></div>

<p>정답 코드와 일치합니다 :)</p>

<h2 id="-step-3-making-arguments">📄 Step 3: Making Arguments</h2>

<blockquote>
  <p>Well done, dear chap! Well done indeed.
I have but one more file for you. It contains the many motions I have seen in cases involving my clients. I must admit, I’d grown quite weary while jotting down those motions. It is missing TypeScript types, and many elements in the motions array have typos in their data.
The tricky thing is, there are a few different types of motions that can be filed. There should be some kind of discriminating indicator property on the types to distinguish between:</p>
</blockquote>

<ul>
  <li>Status: allowed, denied, and pending. Within those types:
    <ul>
      <li>Allowed: it may also indicate how many hours it spent in deliberation</li>
      <li>Denied: it may also indicate how many hours it spent in deliberation, and whether it annoyed the justice</li>
      <li>Pending: it may also indicate how many hours it’s estimated to spent in deliberation</li>
    </ul>
  </li>
  <li>Step: post-trial and pre-trial. Within those types:
    <ul>
      <li>Pre-trial: I only noted dismissals, suppressions, and venue changes</li>
      <li>Post-trial: I only noted acquittals, corrections, and new trials</li>
    </ul>
  </li>
</ul>

<p><strong>▪ 아주 잘했군, 녀석. 나 정말 피곤하다… 내 클라이언트 사건들에서 사라진 타입을 찾고 오타 좀 고쳐주라.. 여기 구별하기 위한 프로퍼티들이 있어.(망해버린 번역입니다.)</strong></p>

<h2 id="-문제-코드-2">📄 문제 코드</h2>

<p>배열 motions 요소를 이루는 객체의 타입을 지정해주어야 하네요.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Write your types here! ✨</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">motions</span><span class="p">:</span> <span class="nx">Motion</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">acquittal</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">defendant</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">The heretofore document had dried ink on it.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">correction</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mf">2.5</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">plaintiff</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">The tenant has ninety days to vacate.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">suppress</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">plaintiff</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Frank was never allowed in the house.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">allowed</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pre-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">new trial</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">estimatedDeliberationHours</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">defendant</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">The duel's been accepted. There's no backing out. That's the law.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pending</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">dismiss</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">plaintiff</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span>
      <span class="dl">"</span><span class="s2">It seems like you have a tenuous grasp on the English language in general.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pre-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">correction</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mf">1.5</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">defendant</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Fillibuster?</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">venue</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mf">0.25</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">defendant</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">A time was never specified for the duel.</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pre-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">annoyedJustice</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">correction</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">deliberationHours</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
    <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">plaintiff</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">reason</span><span class="p">:</span> <span class="dl">"</span><span class="s2">He's making a few good points!</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>
</code></pre></div></div>

<h2 id="-풀이-과정">📄 풀이 과정</h2>

<p>이번 문제는 제 영어 실력에 한계가 느껴졌습니다.</p>

<p>주어진 지문을 보고 문제가 잘 이해가 가지 않았습니다.</p>

<p>처음으로 못풀었던 문제입니다..</p>

<p>우선 객체의 공통된 속성들을 가지고 베이스 타입을 만들어줍니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">MotionBase</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">from</span><span class="p">:</span> <span class="dl">"</span><span class="s2">defendant</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">plaintiff</span><span class="dl">"</span><span class="p">;</span>
  <span class="nl">reason</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>이후, 지문에서 주어진 요구사항에 맞게 두가지 타입을 분류합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">PreTrialMotion</span> <span class="o">=</span> <span class="nx">MotionBase</span> <span class="o">&amp;</span> <span class="p">{</span>
  <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">dismiss</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">suppress</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">venue</span><span class="dl">"</span><span class="p">;</span>
  <span class="nl">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pre-trial</span><span class="dl">"</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">type</span> <span class="nx">PostTrialMotion</span> <span class="o">=</span> <span class="nx">MotionBase</span> <span class="o">&amp;</span> <span class="p">{</span>
  <span class="na">classification</span><span class="p">:</span> <span class="dl">"</span><span class="s2">acquittal</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">correction</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">new trial</span><span class="dl">"</span><span class="p">;</span>
  <span class="nl">step</span><span class="p">:</span> <span class="dl">"</span><span class="s2">post-trial</span><span class="dl">"</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>이렇게 재판 유형에 따른 타입 TrialMotion을 유니언 타입으로 만들어주었습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">TrialMotion</span> <span class="o">=</span> <span class="nx">PostTrialMotion</span> <span class="o">|</span> <span class="nx">PreTrialMotion</span><span class="p">;</span>
</code></pre></div></div>

<p>이제 각 상태에 맞게 타입을 분류하고 유니언 타입으로 합쳐 최종 타입을 생성합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">type</span> <span class="nx">AllowedMotion</span> <span class="o">=</span> <span class="nx">TrialMotion</span> <span class="o">&amp;</span> <span class="p">{</span>
  <span class="na">deliberationHours</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
  <span class="nl">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">allowed</span><span class="dl">"</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">type</span> <span class="nx">DeniedMotion</span> <span class="o">=</span> <span class="nx">TrialMotion</span> <span class="o">&amp;</span> <span class="p">{</span>
  <span class="na">annoyedJustice</span><span class="p">:</span> <span class="nx">boolean</span><span class="p">;</span>
  <span class="nl">deliberationHours</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
  <span class="nl">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">denied</span><span class="dl">"</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">type</span> <span class="nx">PendingMotion</span> <span class="o">=</span> <span class="nx">TrialMotion</span> <span class="o">&amp;</span> <span class="p">{</span>
  <span class="na">estimatedDeliberationHours</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
  <span class="nl">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">pending</span><span class="dl">"</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">export</span> <span class="kd">type</span> <span class="nx">Motion</span> <span class="o">=</span> <span class="nx">AllowedMotion</span> <span class="o">|</span> <span class="nx">DeniedMotion</span> <span class="o">|</span> <span class="nx">PendingMotion</span><span class="p">;</span>
</code></pre></div></div>

<p>영어 공부를 좀 더 해야겠네요.</p>

<p>정답 코드를 보기 전까진 어떻게 해야할지 사실 감이 잘 잡히지 않았습니다.</p>

<p>역시 영어는 꼭 공부해야겠습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li><a href="https://www.learningtypescript.com">learning typescript</a></li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="TypeScript" /><category term="learning typescript" /><category term="러닝 타입스크립트" /><category term="타입 객체" /><category term="various-lawyerings" /><summary type="html"><![CDATA[책 learning typescript 4장 타입 객체 실습 프로젝트 입니다.]]></summary></entry><entry><title type="html">[Lv 1] 정수 제곱근 판별</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/" rel="alternate" type="text/html" title="[Lv 1] 정수 제곱근 판별" /><published>2023-04-03T00:00:00+09:00</published><updated>2023-04-03T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%A0%95%EC%88%98%20%EC%A0%9C%EA%B3%B1%EA%B7%BC%20%ED%8C%90%EB%B3%84</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.
n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.</p>

<ul>
  <li>n은 1이상, 50000000000000 이하인 양의 정수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">sqrt</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span> <span class="c1">// 1</span>
  <span class="k">return</span> <span class="nb">Number</span><span class="p">.</span><span class="nf">isInteger</span><span class="p">(</span><span class="nx">sqrt</span><span class="p">)</span> <span class="p">?</span> <span class="p">(</span><span class="nx">sqrt</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="nx">sqrt</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="p">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// 2</span>
<span class="p">}</span>
</code></pre></div></div>

<p>제곱근을 반환해주는 메소드 <code class="language-plaintext highlighter-rouge">Math.sqrt()</code>를 이용해 문제를 풀었습니다.</p>

<p>for문이나 while문을 사용하면 너무 많은 경우의 수가 생겨 효율성이 좋지 않을 거라고 생각했기 때문입니다.</p>

<ol>
  <li>주어진 숫자 n의 제곱근(<code class="language-plaintext highlighter-rouge">sqrt</code>)을 구한다.</li>
  <li><code class="language-plaintext highlighter-rouge">sqrt</code>가 정수라면 1을 더한 제곱을 반환, 아니면 -1을 반환한다.</li>
</ol>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="정수 제곱근 판별" /><category term="sqrt" /><category term="Number.isInteger" /><category term="pow" /><summary type="html"><![CDATA[정수 제곱근 판별]]></summary></entry><entry><title type="html">[Lv 1] 나머지가 1이 되는 수 찾기</title><link href="http://localhost:4000/programmers-lv1/programmers-%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-1%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%88%98-%EC%B0%BE%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 1] 나머지가 1이 되는 수 찾기" /><published>2023-03-31T00:00:00+09:00</published><updated>2023-03-31T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80%201%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EC%88%98%20%EC%B0%BE%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-1%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%88%98-%EC%B0%BE%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>자연수 n이 매개변수로 주어집니다. n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요. 답이 항상 존재함은 증명될 수 있습니다.</p>

<ul>
  <li>3 ≤ n ≤ 1,000,000</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">n</span> <span class="o">%</span> <span class="nx">i</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="nx">i</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>for문으로 반복문을 돌려 나머지가 1이 되면 바로 값을 반환했습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">while </span><span class="p">(</span><span class="nx">x</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">n</span> <span class="o">%</span> <span class="nx">x</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">x</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>증감연산자를 for문뿐만 아니라 while문에서 사용해 반복문을 돌릴 수 있다는 걸 배워갑니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/87389">프로그래머스 - 나머지가 1이 되는 수 찾기</a></li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="나머지가 1이 되는 수 찾기" /><summary type="html"><![CDATA[프로그래머스 Lv1. x만큼 간격이 있는 n개의 숫자]]></summary></entry><entry><title type="html">[Lv 2] 이진 변환 반복하기</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%9D%B4%EC%A7%84-%EB%B3%80%ED%99%98-%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 2] 이진 변환 반복하기" /><published>2023-03-31T00:00:00+09:00</published><updated>2023-03-31T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%9D%B4%EC%A7%84%20%EB%B3%80%ED%99%98%20%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%9D%B4%EC%A7%84-%EB%B3%80%ED%99%98-%EB%B0%98%EB%B3%B5%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.</p>

<p>x의 모든 0을 제거합니다.
x의 길이를 c라고 하면, x를 “c를 2진법으로 표현한 문자열”로 바꿉니다.
예를 들어, x = “0111010”이라면, x에 이진 변환을 가하면 x = “0111010” -&gt; “1111” -&gt; “100” 이 됩니다.</p>

<p>0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 “1”이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>

<ul>
  <li>s의 길이는 1 이상 150,000 이하입니다.</li>
  <li>s에는 ‘1’이 최소 하나 이상 포함되어 있습니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">binaryTransforms</span> <span class="o">=</span> <span class="nx">s</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">NumberOfZero</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// NumberOfZero += binaryTransforms.match(/0/gi)?.length; 🚨 Error!</span>
    <span class="nx">NumberOfZero</span> <span class="o">+=</span> <span class="nx">binaryTransforms</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
    <span class="nx">binaryTransforms</span> <span class="o">=</span> <span class="nx">binaryTransforms</span><span class="p">?.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/1/gi</span><span class="p">).</span><span class="nx">length</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>

    <span class="nf">if </span><span class="p">(</span><span class="nx">binaryTransforms</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">1</span><span class="dl">"</span><span class="p">)</span> <span class="k">return</span> <span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">NumberOfZero</span><span class="p">];</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>저번에 공부한 <code class="language-plaintext highlighter-rouge">match()</code>라는 메소드를 야무지게 써먹어 보았습니다.</p>

<p>그런데 문자열에서 0만 뽑아오는 binaryTransform이 0이 없을 때 null을 뱉어 NumberOfZero이 Nan이라는 결과를 뱉습니다.</p>

<p>이를 해결하기 위해 <code class="language-plaintext highlighter-rouge">split()</code>메소드를 사용해 무조건 값이 나오게 만들어 length 속성을 사용할 수 있도록 작성했습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">];</span>
  <span class="nf">while </span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="nx">answer</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/0/g</span><span class="p">)</span> <span class="o">||</span> <span class="p">[]).</span><span class="nx">length</span><span class="p">;</span>
    <span class="nx">s</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sr">/0/g</span><span class="p">,</span> <span class="dl">""</span><span class="p">).</span><span class="nx">length</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>제가 많은 것들을 놓치고 있었네요.</p>

<ul>
  <li>명확한 조건이 있음에도 의미 없이 <code class="language-plaintext highlighter-rouge">for</code>문을 사용</li>
  <li>OR 연산자를 사용해 조건을 걸어 length 사용 가능</li>
  <li>답을 무조건 변수에 넣는다고 좋은 것이 아님</li>
</ul>

<p>저는 다른것보다 답을 배열에 넣어놓은 부분이 마음에 들었습니다.</p>

<p>반환되는 값이 어떤 역할을 하는지 명확히 하려고 변수에 담았는데 오히려 여기서 보여주는 답안이 answer이 하는 역할을 더 잘 보여주는 것 같습니다.</p>

<p>또하나 인상적인 점은 string 메소드인 <code class="language-plaintext highlighter-rouge">replace()</code>를 사용했다는 것입니다.</p>

<p><span style="background: #FFD966; padding: 1em">📌 String.prototype.replace(): 문자열을 치환할 수 있다. str.replace(해당 문자열 || 정규식, 치환할 문자열 || 함수) </span></p>

<p>이녀석도 기억해서 다음 문제에 사용하게 된다면 야무지게 써먹어보겠습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="이진수" /><category term="replace" /><summary type="html"><![CDATA[자연수 이진수 만드는 방법 & 문자열 치환하기 replace]]></summary></entry><entry><title type="html">[Lv 2] 최솟값 만들기</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 2] 최솟값 만들기" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.
배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)</p>

<p>예를 들어 A = [1, 4, 2] , B = [5, 4, 4] 라면</p>

<ul>
  <li>A에서 첫번째 숫자인 1, B에서 첫번째 숫자인 5를 뽑아 곱하여 더합니다. (누적된 값 : 0 + 5(1x5) = 5)</li>
  <li>A에서 두번째 숫자인 4, B에서 세번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 5 + 16(4x4) = 21)</li>
  <li>A에서 세번째 숫자인 2, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 21 + 8(2x4) = 29)</li>
</ul>

<p>즉, 이 경우가 최소가 되므로 29를 return 합니다.</p>

<p>배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.</p>

<ul>
  <li>배열 A, B의 크기 : 1,000 이하의 자연수</li>
  <li>배열 A, B의 원소의 크기 : 1,000 이하의 자연수</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span> <span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">newA</span> <span class="o">=</span> <span class="nx">A</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">newB</span> <span class="o">=</span> <span class="nx">B</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span> <span class="o">+=</span> <span class="nx">newA</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">*</span> <span class="nx">newB</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이번 문제를 통해 숫자를 오름차순, 내림차순 하는 법을 공부했습니다.</p>

<p>곱셈한 값의 누적결과가 최솟값이 되려면 <code class="language-plaintext highlighter-rouge">가장 작은 수 x 가장 큰 수</code>가 되어야 하기 때문입니다.</p>

<p>따라서 A는 오름차순으로 B는 내림차순으로 정렬해 인덱스가 일치하는 값끼리 곱셈해주었습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span> <span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">A</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="nx">B</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nf">reduce</span><span class="p">((</span><span class="nx">total</span><span class="p">,</span> <span class="nx">val</span><span class="p">,</span> <span class="nx">idx</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">total</span> <span class="o">+</span> <span class="nx">val</span> <span class="o">*</span> <span class="nx">B</span><span class="p">[</span><span class="nx">idx</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">reduce</code>메소드를 사용한 풀이입니다.</p>

<p><code class="language-plaintext highlighter-rouge">reduce</code>메소드를 배열 하나에만 적용할 수 있다는 생각에 시도하지 않았는데 이렇게도 접근이 가능하네요 👍</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="최솟값 만들기" /><category term="reduce" /><summary type="html"><![CDATA[숫자 내림차순 오름차순 하는 법 by sort()]]></summary></entry><entry><title type="html">[Lv 1] 문자열 내 p와 y의 개수</title><link href="http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/" rel="alternate" type="text/html" title="[Lv 1] 문자열 내 p와 y의 개수" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%B4%20p%EC%99%80%20y%EC%9D%98%20%EA%B0%9C%EC%88%98</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.</p>

<p>예를 들어 s가 “pPoooyY”면 true를 return하고 “Pyy”라면 false를 return합니다.</p>

<ul>
  <li>문자열 s의 길이 : 50 이하의 자연수</li>
  <li>문자열 s는 알파벳으로만 이루어져 있습니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">return </span><span class="p">(</span>
    <span class="nx">s</span><span class="p">.</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">===</span>
    <span class="nx">s</span><span class="p">.</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">y</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span>
  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>문자열을 소문자로 바꾸고 <code class="language-plaintext highlighter-rouge">p</code>와 <code class="language-plaintext highlighter-rouge">y</code>를 기준으로 잘라 크기를 구한 후 1를 빼주면 각 문자가 몇개 들어있는지 알 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">pPoooyY</code>의 경우 <code class="language-plaintext highlighter-rouge">toLowerCase()</code>를 통해 소문자로 바꾸면 <code class="language-plaintext highlighter-rouge">ppoooyy</code>가 됩니다.</p>

<p>이후 <code class="language-plaintext highlighter-rouge">p</code>를 기준을 문자열을 <code class="language-plaintext highlighter-rouge">split()</code>메소드를 이용해 잘라내면 <code class="language-plaintext highlighter-rouge">["", "", "oooyy"]</code>가 됩니다.</p>

<p>이 배열의 크기는 3인데 여기서 1을 빼면 <code class="language-plaintext highlighter-rouge">p</code>의 개수를 알 수 있습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">numPY</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/p/gi</span><span class="p">).</span><span class="nx">length</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/y/gi</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이 답안은 <code class="language-plaintext highlighter-rouge">match()</code>라는 메소드를 이용했네요.</p>

<p>이번에 처음으로 알아갑니다.</p>

<p><span style="background: #FFD966; padding: 1em;">📌 match()는 특정 문자열를 추출하여 배열로 반환해주는 메소드입니다.</span></p>

<p>그런데 이 코드는 문제가 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">p</code>와 <code class="language-plaintext highlighter-rouge">y</code>가 없을 때 match()가 null을 반환해서 length함수를 쓸 수 없기 때문에 다음과 같은 컴파일 에러가 납니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Cannot read properties of null (reading 'length')
</code></pre></div></div>

<p>이 부분을 해결해보기 위해 옵셔널 체이닝을 걸어주겠습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">numPY</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/p/gi</span><span class="p">)?.</span><span class="nx">length</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/y/gi</span><span class="p">)?.</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이렇게 되면 <code class="language-plaintext highlighter-rouge">undefined === undefined</code>가 되어 <code class="language-plaintext highlighter-rouge">true</code>를 반환해 에러없이 통과할 수 있습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="문자열 내 p와 y의 개수" /><category term="match" /><summary type="html"><![CDATA[문자열에서 특정 문자 개수 구하기]]></summary></entry><entry><title type="html">x만큼 간격이 있는 n개의 숫자</title><link href="http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC-%EA%B0%84%EA%B2%A9%EC%9D%B4-%EC%9E%88%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%88%AB%EC%9E%90/" rel="alternate" type="text/html" title="x만큼 간격이 있는 n개의 숫자" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC-%EA%B0%84%EA%B2%A9%EC%9D%B4-%EC%9E%88%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%88%AB%EC%9E%90/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.</p>

<ul>
  <li>x는 -10000000 이상, 10000000 이하인 정수입니다.</li>
  <li>n은 1000 이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span> <span class="c1">// 1</span>

  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">x</span> <span class="o">*</span> <span class="nx">i</span><span class="p">);</span> <span class="c1">// 2</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>정답으로 반환할 배열 <code class="language-plaintext highlighter-rouge">answer</code>을 생성합니다.</li>
  <li><code class="language-plaintext highlighter-rouge">for</code>문을 돌려 배열 내장함수인 <code class="language-plaintext highlighter-rouge">push</code>를 이용해 배열에 x만큼 더해준 값을 삽입합니다.</li>
</ol>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nc">Array</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">fill</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">v</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="nx">v</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>아예 미리 x로 채워진 배열을 생성후 <code class="language-plaintext highlighter-rouge">map</code>을 이용해 값을 변경해준 답안입니다.</p>

<p>한줄로 훨씬 깔끔하지만 성능은 <code class="language-plaintext highlighter-rouge">for</code>문으로 하는게 더 좋다고 합니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="x만큼 간격이 있는 n개의 숫자" /><summary type="html"><![CDATA[프로그래머스 Lv1. x만큼 간격이 있는 n개의 숫자]]></summary></entry></feed>