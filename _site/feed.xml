<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-08T15:22:20+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sometimes we fall, then we rise ⛵</title><subtitle>프론트엔드 엔지니어가 되기까지</subtitle><author><name>Sujin Kim</name></author><entry><title type="html">[알고리즘] 시간 복잡도와 빅오(Big O) 계산법</title><link href="http://localhost:4000/algorithm/algorithm-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84/" rel="alternate" type="text/html" title="[알고리즘] 시간 복잡도와 빅오(Big O) 계산법" /><published>2023-04-07T00:00:00+09:00</published><updated>2023-04-07T22:06:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm-%EC%8B%9C%EA%B0%84%20%EB%B3%B5%EC%9E%A1%EB%8F%84</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84/"><![CDATA[<h2 id="-시간-복잡도">📄 시간 복잡도</h2>

<p>프로그래머스 문제를 푸는데 이제 점점 성능을 고려해야할 필요성이 생겼습니다.<br />
효율성 테스트를 넘어가야 하기 때문이죠. 🥶<br />
똑같은 답일지라도 빨리 답이 나오는 코드가 더 좋은 성능을 가진 코드인데 이를 구별할 수 있게 하는 것이 시간 복잡도입니다.</p>

<p>시간 복잡도는</p>

<p><strong>입력 값에 따라 연산을 실행할 때, 연산 횟수에 비해 시간이 얼마나 걸리는 지 알려주는 지표</strong>입니다.</p>

<p>이 시간 복잡도를 나타내주는 방법 중 하나가 <span style="color: #6096B4; font-weight: bold;">빅오(Big O) 표기법</span>입니다.</p>

<h2 id="-빅오big-o-표기법의-종류">📄 빅오(Big O) 표기법의 종류</h2>

<p><img src="https://user-images.githubusercontent.com/56298540/230600786-4f4d7814-6fb9-4f3a-bf53-822590f98846.png" alt="image" /></p>

<h3 id="-o1--constant-complexity">▪ O(1) | Constant Complexity</h3>

<p>O(1)는 <span style="color: #FAAB78">입력값에 상관없이 정해진 스텝의 계산을 실행</span>합니다.</p>

<p>콘솔을 한번만 찍는 함수는 아무리 큰 입력값이 오더라도 계산에 영향을 끼치지 않습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">constantComplexity</span> <span class="o">=</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
<span class="p">};</span>

<span class="nf">constantComplexity</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]);</span>
</code></pre></div></div>

<ul>
  <li>스택의 push, pop</li>
</ul>

<h3 id="-on--linear-complexity">▪ O(n) | linear complexity</h3>

<p>O(n)는 <span style="color: #FAAB78">입력값이 증가함에 따라 시간이 같은 비율로 증가</span>합니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">linearComplexity</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nf">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++&gt;</span><span class="p">){</span>
    <span class="p">...</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>for 문</li>
</ul>

<h3 id="-on--quadratic-complexity">▪ O(n²) | Quadratic Complexity</h3>

<p>O(n)는 <span style="color: #FAAB78">입력값이 증가함에 따라 시간이 n²으로 증가</span>합니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">quadraticComplexity</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="p">...</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>이중 for문</li>
  <li>삽입정렬(insertion sort)</li>
  <li>선택정렬(selection sort)</li>
  <li>거품정렬(bubble sort)</li>
</ul>

<h3 id="-olog-n--logarithmic-complexity">▪ O(log N) | Logarithmic Complexity</h3>

<p>O(n)는 <span style="color: #FAAB78">입력값에 따라 처리 시간이 증가</span>합니다.</p>

<p>O(n)은 입력 값이 1이 될 때까지 절반으로 나누는 작업을 반복합니다.<br />
따라서 입력값에 따라 처리 시간이 증가하지만, 비례해서 증가하는 것이 아니므로 O(1)다음으로 빠른 계산법입니다.</p>

<ul>
  <li>이진 트리 탐색</li>
  <li>퀵 정렬(quick sort)</li>
  <li>병합정렬(merge sort)</li>
  <li>힙 정렬(heap Sort)</li>
</ul>

<h2 id="출처">출처</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?v=BEVnxbxBqi8">노마드 코더 - 개발자라면 이제는 알아야하는 Big O 설명해드림. 10분컷.</a></li>
  <li><a href="https://velog.io/@shitaikoto/Algorithm-Time-complexity">shitai.koto - [Algorithm] 시간 복잡도(Time complexity) 학습</a></li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="Algorithm" /><category term="시간 복잡도" /><category term="빅오 계산법" /></entry><entry><title type="html">[프로그래머스 / Lv 2] 기능 개발 by JS</title><link href="http://localhost:4000/programmers-lv2/programmers-%EA%B8%B0%EB%8A%A5-%EA%B0%9C%EB%B0%9C/" rel="alternate" type="text/html" title="[프로그래머스 / Lv 2] 기능 개발 by JS" /><published>2023-04-07T00:00:00+09:00</published><updated>2023-04-07T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EA%B8%B0%EB%8A%A5%20%EA%B0%9C%EB%B0%9C</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EA%B8%B0%EB%8A%A5-%EA%B0%9C%EB%B0%9C/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p>

<p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p>

<p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</p>

<ul>
  <li>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.</li>
  <li>작업 진도는 100 미만의 자연수입니다.</li>
  <li>작업 속도는 100 이하의 자연수입니다.</li>
  <li>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">progresses</span><span class="p">,</span> <span class="nx">speeds</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="kd">let</span> <span class="nx">hundreds</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">while </span><span class="p">(</span><span class="nx">progresses</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 1</span>
    <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">progresses</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">progresses</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">speeds</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
    <span class="p">}</span> <span class="c1">// 2</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">progresses</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="p">{</span>
      <span class="nf">while </span><span class="p">(</span><span class="nx">progresses</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">progresses</span><span class="p">.</span><span class="nf">shift</span><span class="p">();</span>
        <span class="nx">speeds</span><span class="p">.</span><span class="nf">shift</span><span class="p">();</span>
        <span class="nx">hundreds</span><span class="o">++</span><span class="p">;</span>
      <span class="p">}</span> <span class="c1">// 3</span>
      <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">hundreds</span><span class="p">);</span> <span class="c1">// 4</span>
      <span class="nx">hundreds</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>시간 복잡도: O(n^2)</li>
</ul>

<ol>
  <li><code class="language-plaintext highlighter-rouge">progresses</code>의 길이가 0이 될 때까지 반복문을 실행합니다.</li>
  <li><code class="language-plaintext highlighter-rouge">progresses</code>에 인덱스를 맞춰 <code class="language-plaintext highlighter-rouge">speeds</code>를 더해줍니다.</li>
  <li>만약 <code class="language-plaintext highlighter-rouge">progresses</code>의 첫번째 인덱스의 값이 100보다 큰 경우 <code class="language-plaintext highlighter-rouge">shift</code>메소드를 사용해 각 각 배열들의 첫번째 원소를 추출하고, 추출된 횟수를 나타내는 변수 <code class="language-plaintext highlighter-rouge">hundreds</code>에 1을 더합니다.</li>
  <li><code class="language-plaintext highlighter-rouge">progresses</code>의 첫번째 인덱스가 100보다 크지 않아 반복문을 나오면, 작업이 완료된 기능의 개수인 <code class="language-plaintext highlighter-rouge">hundreds</code>를 <code class="language-plaintext highlighter-rouge">answer</code>에 추가합니다.</li>
</ol>

<p>문제를 풀 때 중첩 반복문이 나오면 답은 나와도 성능상 좋지 않게 느껴져 아쉽습니다.<br /></p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">progresses</span><span class="p">,</span> <span class="nx">speeds</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">];</span>
  <span class="kd">let</span> <span class="nx">days</span> <span class="o">=</span> <span class="nx">progresses</span><span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">progress</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span>
    <span class="nb">Math</span><span class="p">.</span><span class="nf">ceil</span><span class="p">((</span><span class="mi">100</span> <span class="o">-</span> <span class="nx">progress</span><span class="p">)</span> <span class="o">/</span> <span class="nx">speeds</span><span class="p">[</span><span class="nx">index</span><span class="p">])</span>
  <span class="p">);</span>
  <span class="kd">let</span> <span class="nx">maxDay</span> <span class="o">=</span> <span class="nx">days</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>

  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">days</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">days</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="nx">maxDay</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">answer</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">maxDay</span> <span class="o">=</span> <span class="nx">days</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
      <span class="nx">answer</span><span class="p">[</span><span class="o">++</span><span class="nx">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>각 기능들이 배포에 걸리는 시간을 배열로 만들어(<code class="language-plaintext highlighter-rouge">days</code>) 조건에 따라 <code class="language-plaintext highlighter-rouge">maxDay</code>를 바꿔가며 <code class="language-plaintext highlighter-rouge">days</code>를 순환합니다.</p>

<p>아예 접근방식이 달라버리네요. 이럴수가 있다니..<br />
속도나 성능을 떠나서 풀이 방식이 신기합니다.<br />
처음에 눈으로 보고 이해가 안가서 종이에 하나하나 조건을 줘가면서 이해했습니다. 세상엔 똑똑한 사람이 많네요.</p>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="스택/큐" /><category term="while" /><summary type="html"><![CDATA[프로그래머스 Lv 2 기능 개발 문제 풀이]]></summary></entry><entry><title type="html">Javascript Math 메소드 정리</title><link href="http://localhost:4000/javascript-Math-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="Javascript Math 메소드 정리" /><published>2023-04-07T00:00:00+09:00</published><updated>2023-04-07T00:00:00+09:00</updated><id>http://localhost:4000/javascript-Math%20%EB%A9%94%EC%86%8C%EB%93%9C%20%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/javascript-Math-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%A0%95%EB%A6%AC/"><![CDATA[]]></content><author><name>Sujin Kim</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Lv 1] 정수 내림차순으로 배치하기 by JS</title><link href="http://localhost:4000/programmers-lv1/programmers-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 1] 정수 내림차순으로 배치하기 by JS" /><published>2023-04-06T00:00:00+09:00</published><updated>2023-04-06T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-%EC%A0%95%EC%88%98%20%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C%20%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.</p>

<ul>
  <li>n은 1이상 8000000000 이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nc">Number</span><span class="p">([...</span><span class="nc">String</span><span class="p">(</span><span class="nx">n</span><span class="p">)].</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">).</span><span class="nf">join</span><span class="p">(</span><span class="dl">""</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>저는 주어진 숫자를 문자열 배열로 만들어 내림차순 한 뒤, 다시 문자열로 바꾸고 숫자로 반환했습니다.</p>

<p>배열 요소를 다 합해 문자열로 바꾸는 방법이 생각이 안나서 조금 헤맸습니다.</p>

<div style="background: #FFD966; padding: 1em;">📌 배열 요소를 이어서 문자열로 바꾸는 방법: arr.join("")</div>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="내림차순" /><category term="배열" /><category term="문자열" /><summary type="html"><![CDATA[배열 요소를 합쳐 문자열로 바꾸는 방법]]></summary></entry><entry><title type="html">[Lv 2] 피보나치 수</title><link href="http://localhost:4000/programmers-lv2/programmers-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98/" rel="alternate" type="text/html" title="[Lv 2] 피보나치 수" /><published>2023-04-06T00:00:00+09:00</published><updated>2023-04-06T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%20%EC%88%98</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.</p>

<p>예를들어</p>

<ul>
  <li>F(2) = F(0) + F(1) = 0 + 1 = 1</li>
  <li>F(3) = F(1) + F(2) = 1 + 1 = 2</li>
  <li>F(4) = F(2) + F(3) = 1 + 2 = 3</li>
  <li>F(5) = F(3) + F(4) = 2 + 3 = 5
와 같이 이어집니다.</li>
</ul>

<p>2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.</p>

<ul>
  <li>n은 2 이상 100,000 이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<p>아마 지금까지 풀었던 프로그래머스 문제 중 가장 오래걸렸던 문제였던 것 같습니다.</p>

<p>재귀로 접근하려고 했다가 실패하고 스택 개념을 적용했습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
    <span class="nf">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
        <span class="nx">arr</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">%</span><span class="mi">1234567</span>
<span class="p">}</span>
</code></pre></div></div>

<p>값이 하나씩 늘어갈 때마다 배열에 값을 넣어줬습니다.</p>

<p>하지만 모든 테스트 코드를 통과하지 못했습니다.</p>

<p>자바스크립트의 number의 범위는 <code class="language-plaintext highlighter-rouge">2^53 -1</code>이 최대이기 때문에 이 이상의 값이 나오면 에러가 발생하기 때문이었습니다.</p>

<p>여기서 시간이 오래걸려 주어진 힌트를 보고 문제를 다시 풀었습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
    <span class="nf">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
        <span class="nx">arr</span><span class="p">.</span><span class="nf">push</span><span class="p">((</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">%</span><span class="mi">1234567</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>
<p>매 연산에 <code class="language-plaintext highlighter-rouge">%1234567</code>을 해주어 너무 큰 값이 발생하지 않게 하는 것이었습니다.</p>

<p>이는 자바스크립트의 특징으로 파이썬의 경우에는 해당되지 않는다고 합니다.</p>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="피보나치 수" /><category term="알고리즘" /><category term="스택" /><summary type="html"><![CDATA[피보나치 수 스택 적용해서 풀기]]></summary></entry><entry><title type="html">[Lv 2] 다음 큰 숫자</title><link href="http://localhost:4000/programmers-lv2/programmers-%EB%8B%A4%EC%9D%8C-%ED%81%B0-%EC%88%AB%EC%9E%90/" rel="alternate" type="text/html" title="[Lv 2] 다음 큰 숫자" /><published>2023-04-05T00:00:00+09:00</published><updated>2023-04-05T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EB%8B%A4%EC%9D%8C%20%ED%81%B0%20%EC%88%AB%EC%9E%90</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EB%8B%A4%EC%9D%8C-%ED%81%B0-%EC%88%AB%EC%9E%90/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.</p>

<ul>
  <li>조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.</li>
  <li>조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.</li>
  <li>조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.
예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.</li>
</ul>

<p>자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.</p>

<ul>
  <li>n은 1,000,000 이하의 자연수 입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">n</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">numberOfOne</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nf">split</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>

  <span class="nf">while </span><span class="p">(</span><span class="nx">answer</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">answer</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nf">split</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">==</span> <span class="nx">numberOfOne</span><span class="p">)</span> <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>저는 주어진 숫자에서 1을 더해가며 이진수로 변환 후 1의 개수를 <code class="language-plaintext highlighter-rouge">split()</code>메소드로 계산해 조건을 걸었습니다.</p>

<p>항상 익숙한 for문만 쓰다가 처음으로 while문을 써보았습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nf">match</span><span class="p">(</span><span class="sr">/1/g</span><span class="p">).</span><span class="nx">length</span> <span class="o">==</span> <span class="nx">a</span><span class="p">.</span><span class="nf">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nf">match</span><span class="p">(</span><span class="sr">/1/g</span><span class="p">).</span><span class="nx">length</span>
    <span class="p">?</span> <span class="nx">a</span>
    <span class="p">:</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">a</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>주어진 문제 함수가 재귀함수가 되었네요.</p>

<p>조건이 맞을 때까지 계속 자기 자신을 호출하는 형태입니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="이진수" /><category term="알고리즘" /><summary type="html"><![CDATA[숫자 이진수 변환하기]]></summary></entry><entry><title type="html">타입스크립트에서 함수 다루기</title><link href="http://localhost:4000/typescript/typescript-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EB%8B%A4%EB%A3%A8%EA%B8%B0/" rel="alternate" type="text/html" title="타입스크립트에서 함수 다루기" /><published>2023-04-04T00:00:00+09:00</published><updated>2023-04-04T22:06:00+09:00</updated><id>http://localhost:4000/typescript/typescript-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%20%ED%95%A8%EC%88%98%20%EB%8B%A4%EB%A3%A8%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/typescript/typescript-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EB%8B%A4%EB%A3%A8%EA%B8%B0/"><![CDATA[<p>타입스크립트에서 함수를 사용할때 변수를 사용할때와 마찬가지로 타입을 지정해주어야 합니다.</p>

<p>함수에서는 크게 매개변수와 반환값에 타입을 지정합니다.</p>

<h2 id="-함수-매개변수">📄 함수 매개변수</h2>

<p>함수의 매개변수에 타입을 지정하면 그 매개변수는 <strong>필수 매개변수</strong>가 됩니다.</p>

<p>그렇다면 반대로 <strong>선택적 매개변수</strong>는 어떻게 지정할까요?</p>

<p>타입 애너테이션(<code class="language-plaintext highlighter-rouge">:</code>)앞에 <code class="language-plaintext highlighter-rouge">?</code>를 붙여주면 됩니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">announceSong</span><span class="p">(</span><span class="nx">song</span><span class="p">:</span> <span class="kr">string</span><span class="p">,</span> <span class="nx">singer</span><span class="p">?:</span> <span class="kr">string</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Song: </span><span class="p">${</span><span class="nx">song</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">announceSong</code>함수의 매개변수인 <code class="language-plaintext highlighter-rouge">singer</code>은 선택적 매개변수가 되었습니다.</p>

<p>singer의 구체적인 타입은 <code class="language-plaintext highlighter-rouge">string | undefined</code>입니다.</p>

<p>이렇게 생성된 선택적 매개변수는 호출될때 생략해도 에러가 발생하지 않습니다.</p>

<h3 id="-나머지-매개변수">▪ 나머지 매개변수</h3>

<p>나머지 매개변수는 매개변수의 개수를 특정할 수 없을 때 사용합니다.</p>

<p>스프레드 연산자(<code class="language-plaintext highlighter-rouge">...</code>)를 사용해 배열로 나타납니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">singAllTheSongs</span><span class="p">(</span><span class="nx">singer</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="p">...</span><span class="nx">song</span><span class="p">:</span> <span class="nx">string</span><span class="p">[])</span> <span class="p">{</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">const</span> <span class="nx">song</span> <span class="k">of</span> <span class="nx">songs</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">song</span><span class="p">}</span><span class="s2">, by </span><span class="p">${</span><span class="nx">singer</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nf">singAllTheSongs</span><span class="p">(</span><span class="dl">"</span><span class="s2">Day6</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// ok</span>
<span class="nf">singAllTheSongs</span><span class="p">(</span><span class="dl">"</span><span class="s2">Day6</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">예뻤어</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">한 페이지가 될 수 있게</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">때려쳐</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// ok</span>
</code></pre></div></div>

<h2 id="-반환-타입">📄 반환 타입</h2>

<p>타입스크립트는 함수의 반환 타입도 유추할 수 있습니다.</p>

<p>따라서 타입스크립트가 명확하게 타입을 유추할 수 있는 상황이라면, 타입을 명시적으로 지정하는 것은 중복된 타입 지정이므로 지양하는 것이 좋습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span><span class="p">():</span> <span class="nx">반환</span> <span class="nx">타입</span> <span class="p">{</span>
  <span class="p">...</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="p">():</span> <span class="nx">반환</span> <span class="nx">타입</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="p">...</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-함수-타입">📄 함수 타입</h2>

<p>함수 타입은 함수를 매개변수에 값으로 넘겨줘야 하는 상황에 지정해야 합니다.</p>

<p>마찬가지로 타입이 맞지 않으면 에러가 발생합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">functions</span> <span class="nf">runOnSongs</span><span class="p">(</span><span class="nx">getSonAt</span><span class="p">:</span> <span class="p">(</span><span class="nx">index</span><span class="p">:</span> <span class="kr">number</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="kr">string</span><span class="p">){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nf">getSongAt</span><span class="p">(</span><span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span><span class="p">));</span> <span class="c1">// Error.</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-그-외-반환-타입">📄 그 외 반환 타입</h2>

<h3 id="-void">▪ void</h3>

<p>반환 타입이 <code class="language-plaintext highlighter-rouge">void</code>인 경우는 다음과 같습니다.</p>

<ul>
  <li>return문이 없는 함수인 경우</li>
  <li>값을 반환하지 않는 return문인 경우</li>
</ul>

<p>반환 타입이 void인 경우 undefined와 잘 구분해야 합니다.</p>

<p>반환 타입이 void인 경우는 반환 타입이 무시된다는 것을 의미하고 undefined는 반환되는 리터럴값이기 때문입니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">returnVoid</span><span class="p">(){</span>
  <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nx">lazyValue</span><span class="p">:</span> <span class="kr">string</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>

<span class="nx">lazyValue</span> <span class="o">=</span> <span class="nf">returnVoid</span><span class="p">()</span><span class="o">\</span>
<span class="c1">// Error: Type 'void' is not assignable to type 'string | undefined'</span>
</code></pre></div></div>

<h3 id="-never">▪ never</h3>

<p>never 반환 타입은 의도적으로 오류를 발생시킵니다.</p>

<p>따라서 에러를 제어하는 경우에 사용합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">fail</span><span class="p">(</span><span class="nx">message</span><span class="p">:</span> <span class="kr">string</span><span class="p">):</span> <span class="nx">never</span> <span class="p">{</span>
  <span class="k">throw</span> <span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="s2">`Invariant failure: </span><span class="p">${</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nf">workWithUnasafeParam</span><span class="p">(</span><span class="nx">param</span><span class="p">:</span> <span class="nx">unknown</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">if </span><span class="p">(</span><span class="k">typeof</span> <span class="nx">param</span> <span class="o">!==</span> <span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">fail</span><span class="p">(</span><span class="s2">`param should be a string, not </span><span class="p">${</span><span class="k">typeof</span> <span class="nx">param</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">param</span><span class="p">.</span><span class="nf">toUpperCase</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="참고">참고</h2>

<ul>
  <li>learning typescript</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="TypeScript" /><category term="함수" /><summary type="html"><![CDATA[타입스크립트에서 함수를 사용하는 방법]]></summary></entry><entry><title type="html">[Lv 1] 자연수 뒤집어 배열로 만들기 by JS</title><link href="http://localhost:4000/programmers-lv1/programmers-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 1] 자연수 뒤집어 배열로 만들기 by JS" /><published>2023-04-04T00:00:00+09:00</published><updated>2023-04-04T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-%EC%9E%90%EC%97%B0%EC%88%98%20%EB%92%A4%EC%A7%91%EC%96%B4%20%EB%B0%B0%EC%97%B4%EB%A1%9C%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.</p>

<ul>
  <li>n은 10,000,000,000이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">numToArr</span> <span class="o">=</span> <span class="p">[...</span><span class="nc">String</span><span class="p">(</span><span class="nx">n</span><span class="p">)].</span><span class="nf">reverse</span><span class="p">();</span> <span class="c1">// 1</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">numToArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nc">Number</span><span class="p">(</span><span class="nx">numToArr</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span> <span class="c1">// 2</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>주어진 숫자를 문자열로 바꿔 하나하나 배열의 요소로 만들어준 후 순서를 바꾼다.</li>
  <li><code class="language-plaintext highlighter-rouge">answer</code>에 <code class="language-plaintext highlighter-rouge">numToArr</code>의 요소를 숫자로 바꿔 삽입해준다.</li>
</ol>

<p>뭔가 한줄짜리 코드로 바꿀 수 있을 것 같은데 깔끔하게 답이 나오지 않아 이렇게 제출했습니다.</p>

<h2 id="-best-practice-1">👍 Best Practice 1</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">return </span><span class="p">(</span><span class="nx">n</span> <span class="o">+</span> <span class="dl">""</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="dl">""</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">reverse</span><span class="p">()</span>
    <span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">n</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nf">parseInt</span><span class="p">(</span><span class="nx">n</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>역시 한줄짜리 답안이 있네요.</p>

<p>아직 배열 내장 메소드를 쓰는 것이 그렇게 익숙하지 않은듯 합니다.</p>

<p>그런데 왜 숫자 뒤에 공백을 붙이고 split(““)을 하면 문자열로 하나하나 쪼개질까요.</p>

<p>열심히 이리저리 콘솔을 찍어본 결과 숫자 뒤에 공백(““)을 붙이면 문자열이 되기 때문이었습니다.</p>

<p>제가 했던 <code class="language-plaintext highlighter-rouge">[...String(n)]</code>과 같은 과정이네요.</p>

<h2 id="-best-practice-2">👍 Best Practice 2</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="k">do</span> <span class="p">{</span>
    <span class="nx">arr</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">n</span> <span class="o">%</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// 1</span>
    <span class="nx">n</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nf">floor</span><span class="p">(</span><span class="nx">n</span> <span class="o">/</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// 2</span>
  <span class="p">}</span> <span class="nf">while </span><span class="p">(</span><span class="nx">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 3</span>

  <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>주어진 자연수를 10으로 나누어 소수점 한자리를 나오게해 그 값을 <code class="language-plaintext highlighter-rouge">arr</code>에 넣어준다.</li>
  <li>뒤에 소수점을 하나 떨궈내고 자릿수를 하나 줄인다.</li>
  <li>n이 0이 될때까지 반복한다.</li>
</ol>

<p>세상은 이런 분들이 바꿔가는걸까요.</p>

<p>저는 어떻게든 배열 메소드를 쓰려고 했는데 이런 멋진 방법이 있습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="reverse" /><category term="split" /><category term="스택/큐" /><summary type="html"><![CDATA[자연수 뒤집어 배열로 만들기]]></summary></entry><entry><title type="html">[모여봐요 코딩의 늪] 🚨 Could not resolve dependency + package maneger Error</title><link href="http://localhost:4000/coding-swamp/coding-swamp-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%B2%84%EC%A0%84-%EB%AC%B8%EC%A0%9C/" rel="alternate" type="text/html" title="[모여봐요 코딩의 늪] 🚨 Could not resolve dependency + package maneger Error" /><published>2023-04-04T00:00:00+09:00</published><updated>2023-04-04T22:06:00+09:00</updated><id>http://localhost:4000/coding-swamp/coding-swamp-%EB%A6%AC%EC%95%A1%ED%8A%B8%20%EB%B2%84%EC%A0%84%20%EB%AC%B8%EC%A0%9C</id><content type="html" xml:base="http://localhost:4000/coding-swamp/coding-swamp-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%B2%84%EC%A0%84-%EB%AC%B8%EC%A0%9C/"><![CDATA[<h2 id="-문제-발생">🚨 문제 발생</h2>

<p>리액트 프로젝트를 github actions를 통해 배포하는데 문제가 발생했습니다.</p>

<p>리액트 버전이 현재 18.2.0인데 @toast-ui라이브러리와 맞지 않습니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/229803270-b3879941-04d0-4416-aaf1-6d94fb25fdae.png" alt="image" /></p>

<p>아무래도 리액트를 17로 버전을 낮춰야겠습니다.</p>

<h2 id="-해결-과정">🔨 해결 과정</h2>

<p>다음 명령어를 통해 리액트를 <code class="language-plaintext highlighter-rouge">17.0.2</code>버전으로 다운그레이드 합니다.</p>

<p>당연히 react-dom도 함께 다운그레이드 합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install react@^17.0.2 react-dom@17.0.2
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/56298540/229811519-a097a0b8-b098-48bd-a093-b54dcb5ef501.png" alt="image" /> 👍</p>

<p>이제 로컬에서 잘 돌아가는지 테스트해보겠습니다.</p>

<p>버전이 바뀌니 뭔가 문제가 발생하네요.</p>

<p>내 이럴 줄 알았습니다.</p>

<h3 id="-cant-resolve-react-domclient">▪ Can’t resolve ‘react-dom/client’</h3>

<p><img src="https://user-images.githubusercontent.com/56298540/229812431-680ad17b-03e8-48ad-83b3-1fc99d62c4e3.png" alt="image" /></p>

<h4>💾 [index.ts]</h4>

<p>버전이 바뀌어 사용방법도 다릅니다.</p>

<p>아래 코드처럼 수정해줍니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// import ReactDOM from "react-dom/client";</span>
<span class="k">import</span> <span class="nx">ReactDOM</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-dom</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="-property-createroot-does-not-exist-on-type">▪ Property ‘createRoot’ does not exist on type</h3>

<p>바뀐 버전은 렌더 방식도 다릅니다.</p>

<p>마찬가지로 index.ts파일에서 진행됩니다.</p>

<p>리액트 17버전은 ReactDOM이 직접 render하는 구조입니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// const root = ReactDOM.createRoot(</span>
<span class="c1">//   document.getElementById("root") as HTMLElement</span>
<span class="c1">// );</span>

<span class="c1">// root.render(</span>
<span class="c1">//   &lt;Provider store={store}&gt;</span>
<span class="c1">//     &lt;PersistGate loading={null} persistor={persistor}&gt;</span>
<span class="c1">//       &lt;ThemeProvider theme={theme}&gt;</span>
<span class="c1">//         &lt;GlobalStyle /&gt;</span>
<span class="c1">//         &lt;Page&gt;</span>
<span class="c1">//           &lt;App /&gt;</span>
<span class="c1">//         &lt;/Page&gt;</span>
<span class="c1">//       &lt;/ThemeProvider&gt;</span>
<span class="c1">//     &lt;/PersistGate&gt;</span>
<span class="c1">//   &lt;/Provider&gt;,</span>
<span class="c1">// );</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nf">render</span><span class="p">(</span>
  <span class="o">&lt;</span><span class="nx">Provider</span> <span class="nx">store</span><span class="o">=</span><span class="p">{</span><span class="nx">store</span><span class="p">}</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">PersistGate</span> <span class="nx">loading</span><span class="o">=</span><span class="p">{</span><span class="kc">null</span><span class="p">}</span> <span class="nx">persistor</span><span class="o">=</span><span class="p">{</span><span class="nx">persistor</span><span class="p">}</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">ThemeProvider</span> <span class="nx">theme</span><span class="o">=</span><span class="p">{</span><span class="nx">theme</span><span class="p">}</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">GlobalStyle</span> <span class="o">/&gt;</span>
        <span class="o">&lt;</span><span class="nx">Page</span><span class="o">&gt;</span>
          <span class="o">&lt;</span><span class="nx">App</span> <span class="o">/&gt;</span>
        <span class="o">&lt;</span><span class="sr">/Page</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/ThemeProvider</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/PersistGate</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="sr">/Provider&gt;</span><span class="err">,
</span>  <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">root</span><span class="dl">"</span><span class="p">)</span>
<span class="p">);</span>
</code></pre></div></div>

<p>이제 문제 없이 프로젝트가 잘 돌아갑니다.</p>

<p>과연 <code class="language-plaintext highlighter-rouge">npm ci</code>명령도 잘 통과할까요..</p>

<h2 id="-문제-발생-2">🚨 문제 발생 #2</h2>

<p><img src="https://user-images.githubusercontent.com/56298540/229816887-6d15af8c-000a-4d8b-90b6-d709b2c60a5d.png" alt="image" /></p>

<p>이번엔 <strong>testing library</strong>가 문제네요.</p>

<p>현재 설치되어 있는 testing-library 버전 @13.4.0은 react 버전 @18.0.0이랑 맞는답니다.</p>

<p>라이브러리끼리 서로 합의 봐주면 안되는 것이었을까요.</p>

<p>찾아보니 react-testing-libray 12버전은 react 18버전 아래로는 다 지원이 가능하다고 합니다.</p>

<h2 id="-문제-해결">🔨 문제 해결</h2>

<p>react-testing-library를 <code class="language-plaintext highlighter-rouge">12.1.5</code>버전으로 다운그레이드 하겠습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install @testing-library/react@^12.1.5
</code></pre></div></div>

<h2 id="-문제-발생-3">🚨 문제 발생 #3</h2>

<p><code class="language-plaintext highlighter-rouge">npm ci</code>명령에서 다시 문제가 발생했습니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/229825875-fb878b52-f944-4aed-a9b8-74372a902f04.png" alt="image" /></p>

<p>package-lock.json파일을 삭제 후 다시 <code class="language-plaintext highlighter-rouge">npm install</code>해도 안되네요.</p>

<p>npm install로 npm을 설치해서 package-lock.json파일도 생성되었는데 왜 안될까요.</p>

<h2 id="-문제-해결-1">🔨 문제 해결</h2>

<p>그것은 바로 제가 <strong>yarn.lock</strong>파일을 가지고 있었기 때문입니다.</p>

<p>프로젝트를 계속 yarn으로 진행했는데 이게 문제가 될 줄 몰랐습니다.</p>

<p>CI를 진행하는데 필요한 정보가 <code class="language-plaintext highlighter-rouge">package-lock.json</code>이 아니라 <code class="language-plaintext highlighter-rouge">yarn.lock</code>에 있었나 봅니다.</p>

<p>그렇다면 이제부턴 정말 yarn뿐입니다.</p>

<p>npm을 쓰든 yarn을 쓰든 하나의 매니저와 갑시다…</p>

<p>npm은 보내주고 yarn을 사용해 CI를 진행하겠습니다.</p>

<p>yarn으로 ci를 실행시키는 커맨드는 다음과 같습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn install --immutable --immutable-cache --check-cache
</code></pre></div></div>

<h4>[💾 CICD.yml]</h4>

<p>문제된 부분을 수정합니다.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">CICD</span><span class="pi">:</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@main</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span> <span class="s">yarn install --immutable --immutable-cache --check-cache // 🎉</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span> <span class="s">yarn build // 🎉</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">deploy to s3</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">jakejarvis/s3-sync-action@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">args</span><span class="pi">:</span> <span class="s">--delete</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">AWS_S3_BUCKET</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_ACCESS_KEY_ID</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_SECRET_ACCESS_KEY</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_REGION</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ap-northeast-2"</span>
          <span class="na">SOURCE_DIR</span><span class="pi">:</span> <span class="s2">"</span><span class="s">build"</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/56298540/229835992-95140d01-cfc0-4276-9b10-e0890df94787.png" alt="image" /></p>

<p>드디어…CICD 파이프라인이 완성되었습니다. 🎉</p>

<hr />

<h2 id="-오늘의-회고">🥶 오늘의 회고</h2>

<p>공부를 하면 할수록 꼼수를 부리면 나중에 탈이 나고, 귀찮아서 넘기면 눈덩이처럼 커져 돌아오는것을 알았습니다.<br />
그냥 애초에 눈에 보일 때 해결해야 뒤탈이 없습니다.<br />
사실 toast-ui에 뭔가 버전이 안맞는 다는 걸 알았는데 개발환경에선 문제가 없길래 넘겼거든요.<br />
인터스텔라가 흥행한 이유는 과거를 후회하는 인간이 많기 때문일까요.<br />
이상 독학러의 주저리였습니다.</p>

<hr />

<h2 id="참고">참고</h2>

<ul>
  <li>
    <p><a href="https://stackoverflow.com/questions/72264785/what-are-the-corresponding-testing-library-react-versions-for-react-16-8-6">what-are-the-corresponding-testing-library-react-versions-for-react-16-8-6</a></p>
  </li>
  <li>
    <p><a href="https://stackoverflow.com/questions/69984660/npm-ci-can-only-install-packages-with-an-existing-package-lock-json-or-npm-shrin">npm-ci-can-only-install-packages-with-an-existing-package-lock-json-or-npm-shrin</a></p>
  </li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="coding-swamp" /><category term="모코늪" /><category term="리액트 버전" /><category term="toast-ui" /><category term="다운 그레이드" /><category term="testing-library" /><category term="에러" /><category term="npm" /><summary type="html"><![CDATA[리액트 꼬리에 꼬리를 무는 다운그레이드]]></summary></entry><entry><title type="html">[모여봐요 코딩의 늪] 🚨 react-scripts: not found</title><link href="http://localhost:4000/coding-swamp/coding-swamp-scripts-not-found/" rel="alternate" type="text/html" title="[모여봐요 코딩의 늪] 🚨 react-scripts: not found" /><published>2023-04-04T00:00:00+09:00</published><updated>2023-04-04T22:06:00+09:00</updated><id>http://localhost:4000/coding-swamp/coding-swamp-scripts%20not%20found</id><content type="html" xml:base="http://localhost:4000/coding-swamp/coding-swamp-scripts-not-found/"><![CDATA[<h2 id="-문제-발생">🚨 문제 발생</h2>

<p>모코늪 프로젝트에서 github actions를 통해 프로젝트를 배포하는데 <code class="language-plaintext highlighter-rouge">npm run build</code>명령어가 되질 않습니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/229796651-09a5dd5c-951d-4c6e-8ae5-fa01d747ea16.png" alt="image" /></p>

<p>프로젝트에서 npm을 업데이트하고 설치해도 같은 문제가 발생해서 아예 <strong>package.lock</strong>파일과 <strong>node_modules</strong>폴더를 삭제하고 다시 npm을 설치해주었습니다.</p>

<p>실패했습니다.</p>

<h2 id="-문제-해결">🔨 문제 해결</h2>

<p>구글링하면 왜 자꾸 사람들이 node_modules를 지워라, 다시 npm install을 해라 하는지 알았습니다.</p>

<p>그런 케이스들은 로컬 환경에서 일어났던 에러였으니 당연히 다시 npm을 설치해 초기화 시켜주면 해결이 되었던 것입니다.</p>

<p>저는 로컬 환경에서는 빌드가 되었지만 github actions에서 되지 않았던 것이었는데 말이죠.</p>

<p>저의 CICD.yml파일입니다.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">CICD</span><span class="pi">:</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@main</span>
      <span class="c1"># - run: npm ci 이 부분을 실수로 삭제 해놓고 헤매고 있던 것이었습니다.</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span> <span class="s">npm run build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">deploy to s3</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">jakejarvis/s3-sync-action@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">args</span><span class="pi">:</span> <span class="s">--delete</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">AWS_S3_BUCKET</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_ACCESS_KEY_ID</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_SECRET_ACCESS_KEY</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">AWS_REGION</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ap-northeast-2"</span>
          <span class="na">SOURCE_DIR</span><span class="pi">:</span> <span class="s2">"</span><span class="s">build"</span>
</code></pre></div></div>

<h3 id="-npm-ci-란">📌 npm ci 란?</h3>

<p>npm ci는 package-lock.json에 있는 패키지 정보를 이용해 정확한 버전의 패키지들을 설치해서 node_modules에 적재합니다.</p>

<p><code class="language-plaintext highlighter-rouge">npm run build</code>을 실행할 수 있는 파일은 node_modules에 있는데 node_modules를 설치하지 않았으니 에러가 발생할 수 밖에요.</p>

<hr />

<p>그런데 사실 에러가 완전히 끝나지 않았습니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/229803270-b3879941-04d0-4416-aaf1-6d94fb25fdae.png" alt="image" /></p>

<p>@toast ui 라이브러리가 현재 사용중인 react 18버전과 맞지 않습니다.</p>

<p>산넘어 산입니다.</p>

<p>이거 리액트 버전을 낮추는거 밖에 답이 안보이네요.</p>

<h2 id="참고">참고</h2>

<ul>
  <li>https://github.com/facebook/create-react-app/discussions/10220</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="coding-swamp" /><category term="모코늪" /><category term="리액트" /><category term="github actions" /><category term="에러" /><category term="npm ci" /><summary type="html"><![CDATA[github actions 배포 자동화 과정에서 발생]]></summary></entry></feed>