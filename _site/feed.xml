<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-03-30T18:35:11+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sometimes we fall, then we rise ⛵</title><subtitle>프론트엔드 엔지니어가 되기까지</subtitle><author><name>Sujin Kim</name></author><entry><title type="html">[Lv 2] 올바른 괄호</title><link href="http://localhost:4000/programmers-lv2/programmer-%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8/" rel="alternate" type="text/html" title="[Lv 2] 올바른 괄호" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmer-%EC%98%AC%EB%B0%94%EB%A5%B8%20%EA%B4%84%ED%98%B8</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmer-%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>괄호가 바르게 짝지어졌다는 것은 ‘(‘ 문자로 열렸으면 반드시 짝지어서 ‘)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어</p>

<p>”()()” 또는 “(())()” 는 올바른 괄호입니다.
“)()(“ 또는 “(()(“ 는 올바르지 않은 괄호입니다.
‘(‘ 또는 ‘)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.</p>

<ul>
  <li>문자열 s의 길이 : 100,000 이하의 자연수</li>
  <li>문자열 s는 ‘(‘ 또는 ‘)’ 로만 이루어져 있습니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 1</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">(</span><span class="dl">"</span><span class="p">)</span> <span class="nx">sum</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 2</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">)</span> <span class="nx">sum</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 3</span>

    <span class="nf">if </span><span class="p">(</span><span class="nx">sum</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span> <span class="c1">// 4</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">sum</span> <span class="o">===</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// 5</span>
<span class="p">}</span>
</code></pre></div></div>

<p>제가 생각한 풀이는 이렇습니다.</p>

<ol>
  <li>주어진 문자열을 순환한다.</li>
  <li><code class="language-plaintext highlighter-rouge">(</code> 은 <code class="language-plaintext highlighter-rouge">+1</code>을 <code class="language-plaintext highlighter-rouge">sum</code>에 누적한다.</li>
  <li><code class="language-plaintext highlighter-rouge">(</code>은 <code class="language-plaintext highlighter-rouge">-1</code>을 <code class="language-plaintext highlighter-rouge">sum</code>에 누적한다.</li>
  <li>누적된 값이 음수인 경우는 올바르지 않은 괄호이므로 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</li>
  <li>최종 누적된 <code class="language-plaintext highlighter-rouge">sum</code>이 0인지 진위값을 반환한다.</li>
</ol>

<p>이 문제를 처음 보고 어떻게 접근할지 감이 잘 안와서 시간이 약간 걸렸습니다.</p>

<p>자료구조 공부가 부족한 탓일까요.</p>

<p>꾸준히 문제를 풀어야 하는 필요를 다시 한번 생각하게 됩니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="최솟값 만들기" /><category term="reduce" /><summary type="html"><![CDATA[프로그래머스 lv 2 올바른 괄호]]></summary></entry><entry><title type="html">[Lv 2] 최솟값 만들기</title><link href="http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Lv 2] 최솟값 만들기" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-%EC%B5%9C%EC%86%9F%EA%B0%92-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.
배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)</p>

<p>예를 들어 A = [1, 4, 2] , B = [5, 4, 4] 라면</p>

<ul>
  <li>A에서 첫번째 숫자인 1, B에서 첫번째 숫자인 5를 뽑아 곱하여 더합니다. (누적된 값 : 0 + 5(1x5) = 5)</li>
  <li>A에서 두번째 숫자인 4, B에서 세번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 5 + 16(4x4) = 21)</li>
  <li>A에서 세번째 숫자인 2, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 21 + 8(2x4) = 29)</li>
</ul>

<p>즉, 이 경우가 최소가 되므로 29를 return 합니다.</p>

<p>배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.</p>

<ul>
  <li>배열 A, B의 크기 : 1,000 이하의 자연수</li>
  <li>배열 A, B의 원소의 크기 : 1,000 이하의 자연수</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span> <span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">newA</span> <span class="o">=</span> <span class="nx">A</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">newB</span> <span class="o">=</span> <span class="nx">B</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span> <span class="o">+=</span> <span class="nx">newA</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">*</span> <span class="nx">newB</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이번 문제를 통해 숫자를 오름차순, 내림차순 하는 법을 공부했습니다.</p>

<p>곱셈한 값의 누적결과가 최솟값이 되려면 <code class="language-plaintext highlighter-rouge">가장 작은 수 x 가장 큰 수</code>가 되어야 하기 때문입니다.</p>

<p>따라서 A는 오름차순으로 B는 내림차순으로 정렬해 인덱스가 일치하는 값끼리 곱셈해주었습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span> <span class="nx">B</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">A</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="nx">B</span><span class="p">.</span><span class="nf">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nf">reduce</span><span class="p">((</span><span class="nx">total</span><span class="p">,</span> <span class="nx">val</span><span class="p">,</span> <span class="nx">idx</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">total</span> <span class="o">+</span> <span class="nx">val</span> <span class="o">*</span> <span class="nx">B</span><span class="p">[</span><span class="nx">idx</span><span class="p">],</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">reduce</code>메소드를 사용한 풀이입니다.</p>

<p><code class="language-plaintext highlighter-rouge">reduce</code>메소드를 배열 하나에만 적용할 수 있다는 생각에 시도하지 않았는데 이렇게도 접근이 가능하네요 👍</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="최솟값 만들기" /><category term="reduce" /><summary type="html"><![CDATA[숫자 내림차순 오름차순 하는 법 by sort()]]></summary></entry><entry><title type="html">[Lv 1] 문자열 내 p와 y의 개수</title><link href="http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/" rel="alternate" type="text/html" title="[Lv 1] 문자열 내 p와 y의 개수" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4%20%EB%82%B4%20p%EC%99%80%20y%EC%9D%98%20%EA%B0%9C%EC%88%98</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.</p>

<p>예를 들어 s가 “pPoooyY”면 true를 return하고 “Pyy”라면 false를 return합니다.</p>

<ul>
  <li>문자열 s의 길이 : 50 이하의 자연수</li>
  <li>문자열 s는 알파벳으로만 이루어져 있습니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">return </span><span class="p">(</span>
    <span class="nx">s</span><span class="p">.</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">===</span>
    <span class="nx">s</span><span class="p">.</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">y</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span>
  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>문자열을 소문자로 바꾸고 <code class="language-plaintext highlighter-rouge">p</code>와 <code class="language-plaintext highlighter-rouge">y</code>를 기준으로 잘라 크기를 구한 후 1를 빼주면 각 문자가 몇개 들어있는지 알 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">pPoooyY</code>의 경우 <code class="language-plaintext highlighter-rouge">toLowerCase()</code>를 통해 소문자로 바꾸면 <code class="language-plaintext highlighter-rouge">ppoooyy</code>가 됩니다.</p>

<p>이후 <code class="language-plaintext highlighter-rouge">p</code>를 기준을 문자열을 <code class="language-plaintext highlighter-rouge">split()</code>메소드를 이용해 잘라내면 <code class="language-plaintext highlighter-rouge">["", "", "oooyy"]</code>가 됩니다.</p>

<p>이 배열의 크기는 3인데 여기서 1을 빼면 <code class="language-plaintext highlighter-rouge">p</code>의 개수를 알 수 있습니다.</p>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">numPY</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/p/gi</span><span class="p">).</span><span class="nx">length</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/y/gi</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이 답안은 <code class="language-plaintext highlighter-rouge">match()</code>라는 메소드를 이용했네요.</p>

<p>이번에 처음으로 알아갑니다.</p>

<p><span style="background: #FFD966; padding: 1em;">📌 match()는 특정 문자열를 추출하여 배열로 반환해주는 메소드입니다.</span></p>

<p>그런데 이 코드는 문제가 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">p</code>와 <code class="language-plaintext highlighter-rouge">y</code>가 없을 때 match()가 null을 반환해서 length함수를 쓸 수 없기 때문에 다음과 같은 컴파일 에러가 납니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Cannot read properties of null (reading 'length')
</code></pre></div></div>

<p>이 부분을 해결해보기 위해 옵셔널 체이닝을 걸어주겠습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">numPY</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/p/gi</span><span class="p">)?.</span><span class="nx">length</span> <span class="o">==</span> <span class="nx">s</span><span class="p">.</span><span class="nf">match</span><span class="p">(</span><span class="sr">/y/gi</span><span class="p">)?.</span><span class="nx">length</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이렇게 되면 <code class="language-plaintext highlighter-rouge">undefined === undefined</code>가 되어 <code class="language-plaintext highlighter-rouge">true</code>를 반환해 에러없이 통과할 수 있습니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="문자열 내 p와 y의 개수" /><category term="match" /><summary type="html"><![CDATA[문자열에서 특정 문자 개수 구하기]]></summary></entry><entry><title type="html">x만큼 간격이 있는 n개의 숫자</title><link href="http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC-%EA%B0%84%EA%B2%A9%EC%9D%B4-%EC%9E%88%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%88%AB%EC%9E%90/" rel="alternate" type="text/html" title="x만큼 간격이 있는 n개의 숫자" /><published>2023-03-30T00:00:00+09:00</published><updated>2023-03-30T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC%20%EA%B0%84%EA%B2%A9%EC%9D%B4%20%EC%9E%88%EB%8A%94%20n%EA%B0%9C%EC%9D%98%20%EC%88%AB%EC%9E%90</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-x%EB%A7%8C%ED%81%BC-%EA%B0%84%EA%B2%A9%EC%9D%B4-%EC%9E%88%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%88%AB%EC%9E%90/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.</p>

<ul>
  <li>x는 -10000000 이상, 10000000 이하인 정수입니다.</li>
  <li>n은 1000 이하인 자연수입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span> <span class="c1">// 1</span>

  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">x</span> <span class="o">*</span> <span class="nx">i</span><span class="p">);</span> <span class="c1">// 2</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>정답으로 반환할 배열 <code class="language-plaintext highlighter-rouge">answer</code>을 생성합니다.</li>
  <li><code class="language-plaintext highlighter-rouge">for</code>문을 돌려 배열 내장함수인 <code class="language-plaintext highlighter-rouge">push</code>를 이용해 배열에 x만큼 더해준 값을 삽입합니다.</li>
</ol>

<h2 id="-best-practice">👍 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nc">Array</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">fill</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">v</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="nx">v</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>아예 미리 x로 채워진 배열을 생성후 <code class="language-plaintext highlighter-rouge">map</code>을 이용해 값을 변경해준 답안입니다.</p>

<p>한줄로 훨씬 깔끔하지만 성능은 <code class="language-plaintext highlighter-rouge">for</code>문으로 하는게 더 좋다고 합니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="x만큼 간격이 있는 n개의 숫자" /><summary type="html"><![CDATA[프로그래머스 Lv1. x만큼 간격이 있는 n개의 숫자]]></summary></entry><entry><title type="html">👩‍💻 개발자의 글쓰기</title><link href="http://localhost:4000/books/books-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EA%B8%80%EC%93%B0%EA%B8%B0/" rel="alternate" type="text/html" title="👩‍💻 개발자의 글쓰기" /><published>2023-03-29T00:00:00+09:00</published><updated>2023-03-29T22:06:00+09:00</updated><id>http://localhost:4000/books/books-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98%20%EA%B8%80%EC%93%B0%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/books/books-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EA%B8%80%EC%93%B0%EA%B8%B0/"><![CDATA[<p><img src="https://user-images.githubusercontent.com/56298540/228564066-8ebc1f8d-a344-4bc5-8777-2dc39bd2a745.png" alt="image" /></p>

<div style="background: #EEE9DA; padding: 1em">
▪ 제목: 개발자의 글쓰기<br />
▪ 작가: 김철수<br />
▪ 출판사: 위키북스<br />
▪ 독서 기간: 2023/03/29 ~ ing<br />
▪ 읽은 방식: 종이책
</div>

<hr />

<p>원래 독서기록을 쓸 때는 자유형식으로 쓰지만, 이 책은 글 쓰는 스킬을 정리해두면 두고두고 볼 것 같아 정리합니다. 전체 내용을 정리한 것이 아니라 글 작성자에게 필요한 개념을 주로 정리했습니다.</p>

<h2 id="-1장-개발자가-알아야-할-글쓰기-기본">📄 1장 개발자가 알아야 할 글쓰기 기본</h2>

<h3>문장을 구조화 하는 법</h3>

<p>핵심을 말하고 부가 설명을 해라.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>나는 김수진이다. 글쓰기를 좋아하는 웹 개발자 취준생이다.
</code></pre></div></div>

<h3>서술식, 개조식, 도식의 차이</h3>

<ul>
  <li>서술식
    <ul>
      <li>~다.</li>
      <li>소설, 신문, 개발 가이드문서</li>
    </ul>
  </li>
  <li>개조식
    <ul>
      <li>명사형 종결어미</li>
      <li>릴리스 문서나 장애 보고서</li>
      <li>글머리 기호를 활용</li>
    </ul>
  </li>
  <li>도식
    <ul>
      <li>중복이나 누락이 많은 경우</li>
      <li>각 항목이나 사항의 관계를 명확히 규정하고 싶은 경우</li>
    </ul>
  </li>
</ul>

<h3>변수나 함수 영어 단어 선택 팁</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">create</code>: 정해진 틀이 없을 때 틀을 만들기 위해 사용</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">resister</code>: 정해진 틀에 값을 넣을 때 사용.</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">change</code>: 단순히 내용을 바꾸는 경우에 사용</li>
  <li><code class="language-plaintext highlighter-rouge">modify</code>: 잘못된 것을 바로잡을 때 사용</li>
  <li><code class="language-plaintext highlighter-rouge">revise</code>: 기존에 없던 새로운 정보나 아이디어를 덧붙일 때 사용</li>
</ul>

<h2 id="-2장-개발-시간을-줄여주는-이름-짓기와-주석-쓰기">📄 2장 개발 시간을 줄여주는 이름 짓기와 주석 쓰기</h2>

<p>책 읽는 중… 📖</p>]]></content><author><name>Sujin Kim</name></author><category term="books" /><category term="개발자의 글쓰기" /><category term="IT서적" /><category term="김철수" /><category term="위키북스" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Sass (Syntactically Awesome StyleSheets)</title><link href="http://localhost:4000/css/css-Sass/" rel="alternate" type="text/html" title="Sass (Syntactically Awesome StyleSheets)" /><published>2023-03-29T00:00:00+09:00</published><updated>2023-03-29T22:06:00+09:00</updated><id>http://localhost:4000/css/css-Sass</id><content type="html" xml:base="http://localhost:4000/css/css-Sass/"><![CDATA[<p>Sass의 수요가 높아지고, 많이들 사용하는 추세라 배워보고 싶었는데 생각보다 공부하고 프로젝트에 적용시키기가 어려웠습니다.</p>

<p>프로젝트를 진행하는 경우에 Sass를 사용해 보고 싶었지만, 빌드된 CSS파일 관리를 어떻게 해야할지 몰라 결국 익숙한 styled-components로 사용하기도 했습니다.</p>

<p>예전에 웹 공부를 시작할때 기초 강의로 도움을 받았던 유노코딩님의 Sass 강의가 열려 재밌게 공부하고 정리한 내용입니다.</p>

<h2 id="-sass란-무엇인가">📄 Sass란 무엇인가?</h2>

<p>Sass는 css를 효율적으로 작성하기 위한 CSS 전처리기 언어입니다.<br />
전처리기는 ‘전에 처리한다’라고 이해하면 쉽습니다.<br />
css가 되기 전에 Sass구문으로 작성해 처리하기 때문입니다.<br />
css는 코드가 커질수록 유지보수가 복잡해집니다.<br />
Sass는 이를 보완하기 위해 등장하였으며, 코드를 수정하거나 재사용하기에도 굉장히 편리합니다.</p>

<p>정리하자면 <strong>CSS를 읽기도 좋고 쓰기에도 좋게 사용하기 위해 만들어진 CSS 전처리기 언어</strong>입니다.</p>

<h3>▪ Sass 동작 방식</h3>

<p>Sass의 동작 방식은 다음과 같습니다.</p>

<ol>
  <li>Sass 구문에 맞게 코드를 작성한다.</li>
  <li>Sass 전처리기에 의해 CSS 코드로 변환(컴파일)된다.</li>
  <li>변환을 마치고, CSS 파일이 생성된다.(빌드)</li>
</ol>

<h3>▪ SCSS 이란?</h3>

<p>SCSS는 Sass의 하위 개념입니다.<br />
Sass 구문과 동일한 기능을 제공하는데 사용하기 좋아 SCSS구문의 수요가 더 높은 편입니다.</p>

<p>👾 scss로 작성한 코드</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$font-stack</span><span class="p">:</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
<span class="nv">$primary-color</span><span class="p">:</span> <span class="mh">#333</span><span class="p">;</span>

<span class="nt">body</span> <span class="p">{</span>
  <span class="nl">font</span><span class="p">:</span> <span class="m">100%</span> <span class="nv">$font-stack</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="nv">$primary-color</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>👾 sass로 작성한 코드</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$font-stack</span><span class="p">:</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
<span class="nv">$primary-color</span><span class="p">:</span> <span class="mh">#333</span><span class="p">;</span>

<span class="na">body</span><span class="err">
  </span><span class="nl">font</span><span class="p">:</span> <span class="m">100%</span> <span class="nv">$font-stack</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="nv">$primary-color</span><span class="p">;</span>

</code></pre></div></div>

<p>Sass로 작성하나 SCSS로 작성하나 결과는 같지만 SCSS구문이 더 가독성있고 친숙한 느낌을 줍니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">//</span> <span class="nt">결과</span>

<span class="nt">body</span> <span class="p">{</span>
  <span class="nl">font</span><span class="p">:</span> <span class="m">100%</span> <span class="err">$</span><span class="n">font-stack</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="err">$</span><span class="n">primary-color</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-sass-준비하기">📄 Sass 준비하기</h2>

<h3>▪ Live Sass Compiler 설치하기</h3>

<p>scss 코드의 변경 사항을 자동으로 감지해 저장할 때마다 새롭게 빌드를 진행하게 해주는 vscode extension입니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/228437241-00162cea-99bc-402e-9359-474c7749b04d.png" alt="image" /></p>

<p>SCSS파일을 생성 후 vscode 하단에 있는 Live Sass Compiler 버튼을 클릭하면 실행됩니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/228437658-5e54cb94-2747-4e02-9b76-840eb01b87d1.png" alt="image" /></p>

<h3>▪ 명령행 인터페이스 사용하기</h3>

<p>명령행은 명령 프롬프트나 터미널을 뜻합니다.<br />
명령행에서 명령어를 입력해 Sass 컴파일을 진행할 수 있습니다.<br />
node.js가 설치되어 있어야 합니다..<br /></p>

<p>✔ Sass 명령행 인터페이스 설치하기</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install -g sass

// 설치 확인하기
sass --version
</code></pre></div></div>

<p><br /></p>

<p>✔ Sass파일을 css파일로 컴파일하기</p>

<p>아래와 같이 컴파일을 진행하면 style폴더에 main.css 파일이 생성되어 컴파일됩니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sass style/main.scss:style/main.css // style/main.scss를 style/main.css로 컴파일한다.

// live Sass Compiler처럼 자동으로 변경사항 감지하는 옵션 추가
sass --watch  style/main.scss:style/main.css
</code></pre></div></div>

<p>css에서 기존 중괄호와 들여쓰기가 포함된 css스타일을 extend 스타일이라고 부릅니다.<br />
extend 스타일은 가독성엔 좋지만 직접 css를 다루지 않는 경우엔 가독성이 필요가 없으니 파일이 큰 경우 용량에 부담이 됩니다.<br />
<strong>compressed</strong>옵션은 그러한 단점을 보완해 코드를 공백없이 압축해 줍니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sass --style compressed style/main.scss:style/main.css
</code></pre></div></div>

<p><br /></p>

<p>✔ extend 스타일</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">h1</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">yellow</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>✔ compressed 스타일</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>h1 {color: #fff;background-color: #ff0;}
</code></pre></div></div>

<h2 id="-주석과-중첩nestring">📄 주석과 중첩(nestring)</h2>

<h3>▪ 주석</h3>

<p>주석 1: 여러 줄 짜리 주석</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* 여러 줄 짜리 주석*/</span>
</code></pre></div></div>

<p>주석 2: 한 줄 짜리 주석</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 한 줄 짜리 주석</span>
</code></pre></div></div>

<p>Scss에서 주석을 사용하는 방법은 두가지 입니다.<br />
한 줄 짜리 주석은 컴파일된 css파일에 반영되지 않지만, 기존 css 주석은 최종 css 파일에도 반영된다는 차이점을 가지고 있습니다.</p>

<h3>▪ 중첩 규칙 (nesting)</h3>

<p>css를 작성하는 경우 선택자를 서로 다른 선언문에서 반복해야 하는 경우가 있습니다.<br />
Sass에서는 선택자를 반복하지 않고 중첩해 사용할 수 있습니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">div</span> <span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>

  <span class="nt">p</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>

    <span class="nt">span</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>컴파일 후 결과 파일에는 선택자가 따로 생성되어 반영된다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">div</span> <span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">div</span> <span class="nt">p</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">div</span> <span class="nt">p</span> <span class="nt">span</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p><strong>✔ 단축 속성 중첩</strong></p>

<p>Sass의 단축 속성 중첩은 ‘네입스페이스 속성 중첩’이라고도 부릅니다.</p>

<p>아래 코드는 font의 속성들을 중첩으로 정의한 예시입니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">p</span> <span class="p">{</span>
  <span class="nl">font</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">family</span><span class="p">:</span> <span class="nb">sans-serif</span><span class="p">;</span>
    <span class="nl">size</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
    <span class="na">style</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
    <span class="na">weight</span><span class="p">:</span> <span class="m">900</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<p><strong>✔ 상위 선택자 참조 (&amp;)</strong></p>

<p>기호 <code class="language-plaintext highlighter-rouge">&amp;</code>사용하면 중첩된 선언문안에서 상위 선택자를 참조할 수 있습니다.<br />
의사클래스를 선택하고자 할 때 유용합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.first-btn</span> <span class="p">{</span>
  <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-변수">📄 변수</h2>

<p>Sass에서는 <code class="language-plaintext highlighter-rouge">$</code>를 사용해 변수를 만들어 데이터를 저장하고 사용할 수 있습니다.<br />
생성된 변수는 최종 CSS파일에서 표시되지 않습니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$main-color</span><span class="p">:</span> <span class="no">orange</span><span class="p">;</span>
<span class="nv">$font-color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>

<span class="nt">button</span> <span class="p">{</span>
  <span class="k">&amp;</span><span class="nd">:nth-child</span><span class="o">(</span><span class="nt">1</span><span class="o">)</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="nv">$font-color</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$main-color</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">&amp;</span><span class="nd">:nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="nv">$font-color</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$main-color</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">200px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">&amp;</span><span class="nd">:nth-child</span><span class="o">(</span><span class="nt">3</span><span class="o">)</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="nv">$font-color</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$main-color</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">300px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>▪ SCSS 변수 사용 규칙</strong></p>

<ol>
  <li>개수 제한은 없지만, 가독성을 해치니 남용하지 않는다.</li>
  <li>변수명에는 영문자, 숫자, <code class="language-plaintext highlighter-rouge">-</code>, <code class="language-plaintext highlighter-rouge">_</code>를 사용하며 가능한 직관적인 이름을 사용한다.</li>
</ol>

<h2 id="-믹스인-mixin">📄 믹스인 (mixin)</h2>

<p>믹스인은 사이트 전체에서 <strong>재사용할 스타일 그룹을 정의</strong>하기 위해 사용하는 문법입니다.</p>

<h3>▪ 믹스인 정의하기</h3>

<p>믹스인을 정의할 때 인자를 함께 정의하면, 믹스인 호출 시에 상황에 따라 값을 다르게 주어 사용할 수 있습니다.<br />
인자를 정의할 때 기본값은 옵션으로 설정합니다.<br />
정의된 믹스인은 최종 CSS파일에 포함되지 않습니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@mixin</span> <span class="nf">box-style</span><span class="p">(</span><span class="nv">$bg-color</span><span class="o">:</span> <span class="no">yellow</span><span class="o">,</span> <span class="nv">$font-color</span><span class="o">:</span> <span class="no">green</span><span class="p">)</span> <span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">display</span><span class="p">:</span> <span class="n">flex</span><span class="p">;</span>
  <span class="nl">justify-content</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">align-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$bg-color</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="nv">$font-color</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3>▪ 믹스인 사용하기</h3>

<p>정의된 믹스인을 사용하고자 할땐 <code class="language-plaintext highlighter-rouge">@include</code>지시어를 사용합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.one</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">box-style</span><span class="p">();</span>
<span class="p">}</span>

<span class="nc">.two</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">box-style</span><span class="p">(</span><span class="no">purple</span><span class="o">,</span> <span class="no">yellow</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-content">📄 @content</h2>

<p><code class="language-plaintext highlighter-rouge">@content</code>는 믹스인의 인자로 단순한 변수가 아닌 스타일 블록 전체를 넘길 때 사용하는 문법입니다.<br />
인자와 스타일 블록을 모두 전달받는 형태의 믹스인을 정의할 수도 있습니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@mixin</span> <span class="nf">btn-style</span><span class="p">(</span><span class="nv">$hv-color</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">@content</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">25px</span><span class="p">;</span>

  <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$hv-color</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nc">.one</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">btn-style</span><span class="p">(</span><span class="no">orange</span><span class="p">)</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">tomato</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nc">.two</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">btn-style</span><span class="p">(</span><span class="no">green</span><span class="p">)</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">teal</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-여러개의-scss파일을-하나의-css파일로-관리하기">📄 여러개의 .scss파일을 하나의 .css파일로 관리하기</h2>

<p>여러개의 .scss파일이 우후죽순 생겨날 때 이를 관리하는 방법이 있습니다.<br />
모든 scss파일을 하나의 css파일로 보내버리는 것이 아니라, <br />
하나의 main.scss파일에서 각 기능을 담당하는 scss파일을 @import해서 사용하는 방법입니다.</p>

<p>이때 주의해야할 점은 mains.scss파일이 아닌 scss파일의 이름은 <strong>언더바</strong>로 시작해야 컴파일 대상에서 제외된다는 사실입니다.&lt;/br&gt;
@import지시자를 사용할 때는 언더바를 제거하고 사용합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//main.scss</span>

<span class="k">@import</span> <span class="s2">"variables.scss"</span><span class="p">;</span>
<span class="k">@import</span> <span class="s2">"mixins.scss"</span><span class="p">;</span>

<span class="nt">div</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">box</span><span class="p">(</span><span class="nv">$main-color</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이렇게 CSS파일을 하나로 만들게 된다면</p>

<ul>
  <li>HTML과 CSS 문서 간 연결 횟수가 줄어 웹사이트 성능 개선에 도움이 되고</li>
  <li>scss파일을 기능별로 분리할 수 있어 보기도 좋고 재사용하기도 좋습니다.</li>
</ul>

<h2 id="-스타일-중복을-피하는-방법-extend">📄 스타일 중복을 피하는 방법 @extend</h2>

<p>@extend지시자는 기존의 스타일을 확장해서 다른 클래스에서 쓰고 싶을 때 사용합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.message</span> <span class="p">{</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
  <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="mh">#fff</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="mh">#5f0</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="k">@extend</span> <span class="nc">.message</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="mh">#f05</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>mixin과 비슷하지만, 저는 mixin은 규격을 설정하는 것이고 extend는 확장을 위해 사용하는 것이라고 이해했습니다.</p>

<p>실제로 컴파일된 결과도 mixin과 다릅니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.message</span><span class="o">,</span>
<span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
  <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="m">#5f0</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="nl">background</span><span class="p">:</span> <span class="m">#f05</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>@exclue를 사용해 컴파일된 결과를 보면 속성들을 사용하고 있는 클래스 네임이 쉼표와 함께 열거되고 있는 것을 확인할 수 있습니다.</p>

<p><strong>유령 클래스</strong>(공식 명칭은 아닙니다.)를 사용해 컴파일 되었을 때 기존 클래스는 노출되지 않으면서 재사용한 클래스만 보여주는 방법도 있습니다.<br />
유령 클래스는 <code class="language-plaintext highlighter-rouge">%</code>기호를 사용합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">%message</span> <span class="p">{</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
  <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="mh">#fff</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="mh">#5f0</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="k">@extend</span> <span class="nv">%message</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="mh">#f05</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>컴파일 된 결과를 확인하면 유령클래스의 이름은 노출되지 않고 있는 것을 확인할 수 있습니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
  <span class="nl">text-transform</span><span class="p">:</span> <span class="nb">uppercase</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="m">#5f0</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.bad-message</span> <span class="p">{</span>
  <span class="nl">background</span><span class="p">:</span> <span class="m">#f05</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="-조건문을-사용해-코드의-흐름-제어하기">📄 조건문을 사용해 코드의 흐름 제어하기</h2>

<p>Sass에서는 <code class="language-plaintext highlighter-rouge">@if</code> 지시자를 이용해 조건을 설정할 수 있습니다.&lt;/br&gt;
아래 예시는 mixin안에 조건문을 설정한 경우입니다.&lt;/br&gt;
<code class="language-plaintext highlighter-rouge">@else</code> 지시자를 사용하면 <code class="language-plaintext highlighter-rouge">@if</code>문이 불만족할 경우의 속성을 설정할 수 있습니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@mixin</span> <span class="nf">select-color</span><span class="p">(</span><span class="nv">$color</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">@if</span> <span class="nv">$color</span> <span class="o">==</span> <span class="no">blue</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">blue</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">@else</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">tomato</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nt">h1</span> <span class="p">{</span>
  <span class="k">@include</span> <span class="nd">select-color</span><span class="p">((</span><span class="no">red</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Sass에서 조건문은 웹사이트를 개발하는 단계보다는 라이브러리를 만드는 경우에 더 자주 사용된다고 합니다.</p>

<h2 id="-미디어-쿼리">📄 미디어 쿼리</h2>

<p>미디어 쿼리는 반응형 웹을 만들 때 사용되는 필수 문법입니다.<br />
Sass에서 미디어 쿼리를 사용할 때 문자열을 변수로 사용하는 경우가 있는데 이때 문자열 삽입용 기호인 <code class="language-plaintext highlighter-rouge">#{}</code>를 사용해야 합니다.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$width-small</span><span class="p">:</span> <span class="s2">"all and (min-width: 300px)"</span><span class="p">;</span>
<span class="nv">$width-medium</span><span class="p">:</span> <span class="s2">"all and (min-width: 600px)"</span><span class="p">;</span>
<span class="nv">$width-large</span><span class="p">:</span> <span class="s2">"all and (min-width: 900px)"</span><span class="p">;</span>

<span class="nt">div</span> <span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>

  <span class="k">@media</span> <span class="si">#{</span><span class="nv">$width-small</span><span class="si">}</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">cadetblue</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">@media</span> <span class="si">#{</span><span class="nv">$width-medium</span><span class="si">}</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">orange</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">@media</span> <span class="si">#{</span><span class="nv">$width-large</span><span class="si">}</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">purple</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="출처">출처</h2>

<ul>
  <li>
    <p><a href="https://www.inflearn.com/course/%EC%B4%88%EB%B3%B4%EC%9E%90-%EC%82%AC%EC%8A%A4-%EA%B8%B0%EC%B4%88%EA%B0%95%EC%9D%98-%ED%81%B4%EB%A1%A0/dashboard">유노코딩</a></p>
  </li>
  <li>
    <p><a href="https://github.com/SJ0826/jamong-talk">실습을 진행한 깃허브 레파지토리</a></p>
  </li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="CSS" /><category term="Sass" /></entry><entry><title type="html">JadenCase 문자열 만들기</title><link href="http://localhost:4000/programmers-lv2/programmers-jadencase/" rel="alternate" type="text/html" title="JadenCase 문자열 만들기" /><published>2023-03-28T00:00:00+09:00</published><updated>2023-03-28T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv2/programmers-jadencase</id><content type="html" xml:base="http://localhost:4000/programmers-lv2/programmers-jadencase/"><![CDATA[<h2 id="-문제">📄 문제</h2>

<p>JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 단, 첫 문자가 알파벳이 아닐 때에는 이어지는 알파벳은 소문자로 쓰면 됩니다. (첫 번째 입출력 예 참고)
문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.</p>

<ul>
  <li>s는 길이 1 이상 200 이하인 문자열입니다.</li>
  <li>s는 알파벳과 숫자, 공백문자(“ “)로 이루어져 있습니다.
    <ul>
      <li>숫자는 단어의 첫 문자로만 나옵니다.</li>
      <li>숫자로만 이루어진 단어는 없습니다.</li>
      <li>공백문자가 연속해서 나올 수 있습니다.</li>
    </ul>
  </li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nf">toLowerCase</span><span class="p">().</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span>

  <span class="kd">const</span> <span class="nx">answer</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">value</span><span class="p">)</span> <span class="o">=&gt;</span>
    <span class="nx">value</span> <span class="p">?</span> <span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">value</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">:</span> <span class="dl">""</span>
  <span class="p">);</span>

  <span class="k">return</span> <span class="nx">answer</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이 문제에는 함정이 있습니다.</p>

<p><strong>공백문자가 연속해서 나올 수 있습니다.</strong></p>

<p>문제를 제대로 읽지 않으면 무엇 때문에 통과할 수 없는지 알 수 없습니다.</p>

<p>제 경험담입니다 :)</p>

<p>제가 푼 순서는 다음과 같습니다.</p>

<ol>
  <li>주어진 문자열을 모두 소문자로 바꾸고 공백을 기준으로 배열(<code class="language-plaintext highlighter-rouge">arr</code>)을 생성한다.</li>
  <li>생성된 배열을 순환해 첫 글자를 대문자로 바꿔줍니다.</li>
  <li>첫 글자가 대문자로 바뀐 문자열들이 담긴 배열을 다시 문자열로 바꿔 반환합니다.</li>
</ol>

<p>2번 과정에서 공백문자가 연속으로 나올 가능성도 생각해야 합니다.</p>

<p><strong>빈 문자열에 인덱스로 접근할 경우 <code class="language-plaintext highlighter-rouge">undefined</code>를 반환</strong>하기 때문에 <code class="language-plaintext highlighter-rouge">toUpperCase</code>에서 런타임 오류를 발생시킵니다.</p>

<p>문자열을 배열로 바꾼 <code class="language-plaintext highlighter-rouge">arr</code>의 요소가 공백문자일 경우 바로 넘어가도록 삼항연산자를 사용했습니다.</p>

<h2 id="-best-practice">🔨 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span>
    <span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)</span>
    <span class="p">.</span><span class="nf">map</span><span class="p">((</span><span class="nx">v</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">v</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nf">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">v</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nf">toLowerCase</span><span class="p">())</span>
    <span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>공백 문자를 해결하는 방법에 <code class="language-plaintext highlighter-rouge">charAt</code>이 있었습니다.</p>

<p><code class="language-plaintext highlighter-rouge">charAt</code>은 해당 인덱스에 위치한 문자열을 반환합니다.</p>

<p>따라서 <strong>빈 문자열에 <code class="language-plaintext highlighter-rouge">charAt</code>으로 접근할 경우 똑같이 빈 문자열을 반환</strong>하기 때문에 문제가 일어나지 않는 것입니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv2" /><category term="프로그래머스" /><category term="JadenCase 문자열 만들기" /><summary type="html"><![CDATA[빈문자열에 숫자 인덱스와 charAt방식으로 접근할 때의 차이점]]></summary></entry><entry><title type="html">가운데 글자 가져오기</title><link href="http://localhost:4000/programmers-lv1/programmers-Import-Intermediate-Characters/" rel="alternate" type="text/html" title="가운데 글자 가져오기" /><published>2023-03-28T00:00:00+09:00</published><updated>2023-03-28T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-Import%20Intermediate%20Characters</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-Import-Intermediate-Characters/"><![CDATA[<h2 id="문제-">문제 📖</h2>

<p>단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.</p>

<ul>
  <li>s는 길이가 1 이상, 100이하인 스트링입니다.</li>
</ul>

<h2 id="️-나의-풀이">🙋‍♀️ 나의 풀이</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">stringToArray</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">s</span><span class="p">];</span> <span class="c1">// 1</span>
  <span class="kd">const</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// 2</span>

  <span class="nf">if </span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 3</span>
    <span class="k">return</span> <span class="nx">stringToArray</span><span class="p">[</span><span class="nx">target</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nx">stringToArray</span><span class="p">[</span><span class="nx">target</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">stringToArray</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nf">floor</span><span class="p">(</span><span class="nx">target</span><span class="p">)];</span> <span class="c1">// 4</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>문자열을 배열(<code class="language-plaintext highlighter-rouge">stringToArray</code>)로 바꾼다.</li>
  <li>배열의 크기를 2로 나눈 수(<code class="language-plaintext highlighter-rouge">target</code>)를 구한다.</li>
  <li><code class="language-plaintext highlighter-rouge">stringToArray</code>가 짝수면 <code class="language-plaintext highlighter-rouge">target</code>과 직전의 값을 인덱스로 하는 값을 함께 반환한다.</li>
  <li>아니면 <code class="language-plaintext highlighter-rouge">target</code>을 반내림해서 하나의 값만 반환한다.</li>
</ol>

<p>이번 문제는 간단해서 1분도 안되어 풀었지만, 오히려 이런 문제에서 고수는 드러나기 마련입니다.</p>

<p>그리고 당연하게도 저는 아직 초보자임이 들통나버립니다.</p>

<h2 id="-best-practice">🔨 Best Practice</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nf">substr</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">ceil</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">0</span> <span class="p">?</span> <span class="mi">2</span> <span class="p">:</span> <span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>왜 삼항연산자를 사용할 생각을 못했을까요.</p>

<p>새로운 <code class="language-plaintext highlighter-rouge">subString()</code>이라는 자바스크립트 문법을 하나 알아갑니다.</p>

<p>📌 <code class="language-plaintext highlighter-rouge">substr</code>이라는 자바스크립트 문법이 인상적이어서 가져왔는데 댓글을 보니 미래에 삭제되니 <code class="language-plaintext highlighter-rouge">subString()</code>으로 대체해서 사용하라고 알려주네요.</p>

<h3 id="-substring">🔖 subString()</h3>

<p><code class="language-plaintext highlighter-rouge">subString()</code>은 문자열을 인덱스를 기준으로 자를 수 있는 메소드 입니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">str</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="nx">시작</span> <span class="nx">인덱스</span><span class="p">,</span> <span class="nx">마지막</span> <span class="nf">인덱스</span><span class="p">(</span><span class="nx">옵션</span><span class="p">));</span>
</code></pre></div></div>

<p>시작 인덱스는 해당 인덱스를 포함하지만, 마지막 인덱스를 해당 인덱스까지 포함하지 않고 직전까지 잘라내기 때문에 헷갈리지 말아야 합니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Mozilla</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">));</span>
<span class="c1">// Expected output: "oz"</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>
<span class="c1">// Expected output: "zilla"</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nf">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span>
<span class="c1">// Expected output: ""</span>
</code></pre></div></div>

<p>만약, 마지막 인덱스보다 시작 인덱스가 크다면 알아서 순서를 바꿔서 메소드가 동작합니다.</p>

<p>시작 인덱스와 마지막 인덱스가 같다면 빈 문자열을 반환합니다.</p>

<h2 id="문제-출처">문제 출처</h2>

<ul>
  <li>프로그래머스</li>
</ul>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="filter" /><category term="스택" /><category term="큐" /><summary type="html"><![CDATA[프로그래머스 Lv1. 가운데 글자 가져오기]]></summary></entry><entry><title type="html">같은 숫자는 싫어</title><link href="http://localhost:4000/programmers-lv1/programmers-I-don't-want-the-same-number/" rel="alternate" type="text/html" title="같은 숫자는 싫어" /><published>2023-03-28T00:00:00+09:00</published><updated>2023-03-28T22:06:00+09:00</updated><id>http://localhost:4000/programmers-lv1/programmers-I%20don&apos;t%20want%20the%20same%20number</id><content type="html" xml:base="http://localhost:4000/programmers-lv1/programmers-I-don&apos;t-want-the-same-number/"><![CDATA[<h2 id="문제-">문제 📄</h2>

<p>배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,</p>

<ul>
  <li>arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.</li>
  <li>arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.</li>
</ul>

<p>배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.</p>

<h2 id="나의-풀이-1-️">나의 풀이 #1 🙋‍♀️</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">arr</span><span class="p">.</span><span class="nf">filter</span><span class="p">((</span><span class="nx">value</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">value</span> <span class="o">!==</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>프로그래머스 문제를 풀어보기 시작하고 처음으로 정답다운 풀이가 나온 느낌입니다.</p>

<p><code class="language-plaintext highlighter-rouge">filter</code>함수를 사용해서 배열을 순환하며 해당 값과 바로 오른쪽의 값을 비교하며 같지 않은 값만 모아놓은 배열을 새로 생성했습니다.</p>

<p>마지막 값은 <code class="language-plaintext highlighter-rouge">undefined</code>와 비교하기 때문에 새로운 배열에 무조건 들어가게 됩니다.</p>

<h2 id="나의-풀이-2-️">나의 풀이 #2 🙋‍♀️</h2>

<p>문제를 보고 바로 <code class="language-plaintext highlighter-rouge">filter</code>함수를 사용하면 되겠다 싶었는데 문제 옆에 <code class="language-plaintext highlighter-rouge">스택/큐</code>라고 쓰여 있어 스택 큐를 떠올리며 다시 풀어봤습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span> <span class="c1">// 1</span>
  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="p">?</span> <span class="dl">""</span> <span class="p">:</span> <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="c1">// 2</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>정답에 해당하는 값만 담을 새로운 배열 <code class="language-plaintext highlighter-rouge">answer</code>을 생성합니다.</li>
  <li>반복문을 돌려 해당 값과 오른쪽의 값을 비교하여 값이 다른 경우에만 새로운 배열(<code class="language-plaintext highlighter-rouge">answer</code>)에 담아 반환해줍니다.</li>
</ol>

<h2 id="best-practice-">Best Practice 👍</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">solution</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[</span><span class="nx">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span>

  <span class="nf">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nf">if </span><span class="p">(</span><span class="nx">answer</span><span class="p">[</span><span class="nx">answer</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">!==</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">answer</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>다른 분의 풀이를 보니 비교한 값이 다른 경우만 생각해도 된다는 것을 알았습니다.</p>

<p>굳이 제 풀이처럼 삼항연산자를 쓰지 않아도 되는 것이었습니다.</p>

<p>왠지 삼항연산자에 집착이 생겨버려 자꾸 쓰게 되네요.</p>

<p>불필요한 습관을 버려야겠습니다.</p>

<h2 id="문제-출처">문제 출처</h2>]]></content><author><name>Sujin Kim</name></author><category term="programmers-lv1" /><category term="filter" /><category term="스택" /><category term="큐" /><summary type="html"><![CDATA[프로그래머스 Lv1. 같은 숫자는 싫어]]></summary></entry><entry><title type="html">[Leaning Typescript 🦜] Primitive Cooking</title><link href="http://localhost:4000/typescript/typescript-learning-typescript-primitive-cooking/" rel="alternate" type="text/html" title="[Leaning Typescript 🦜] Primitive Cooking" /><published>2023-03-27T00:00:00+09:00</published><updated>2023-03-27T22:06:00+09:00</updated><id>http://localhost:4000/typescript/typescript-learning-typescript-primitive%20cooking</id><content type="html" xml:base="http://localhost:4000/typescript/typescript-learning-typescript-primitive-cooking/"><![CDATA[<h1 id="-primitive-cooking">🥗 Primitive Cooking</h1>

<blockquote>
  <p>Those pesky Java programmers are at it again!<br />
I wrote a few functions for a friend to help arrange meals when I have guests over. The friend worked with their enterprise application development team to “improve” the code. Next thing I know, they’ve replaced all my TypeScript-y literal and union types with plain old primitive types.<br />
Those Java fans are perfectly good developers -and lovely people- but we don’t see eye-to-eye on type systems. Now TypeScript is reporting type errors on my code. Could you please correct the type annotations in my files – and maybe a couple bugs the improved types helped TypeScript find?</p>
</blockquote>

<p>성가신 자바 프로그래머들이 또 시작이야!<br />
나는 친구를 위해 손님들이 왔을 때 식사 준비를 도와줄 수 있도록 몇개의 기능을 작성했어. 친구는 코드를 ✌향상시키기 위해✌ 기업 애플리케이션 개발팀과 일해. 다음으로 내가 아는건, 그 사람들이 내 타입스크립트 코드의 리터럴과 유니언 타입을 오래된 순수 원시 타입으로 바꿨다는 거야.(읽기만 해도 열받음)<br />
이 자바 팬들은 완전 좋은 개발자들이야(게다가 사랑스러움). 하지만 우린(자바와 자바스크립트) 타입 시스템이 일치하지 않잖아. 지금 타입스크립트가 내 코드에서 타입 에러들을 보고하고 있거든. 내 파일들에서 타입 애너테이션들을 올바르게 고쳐줄래?</p>

<h2 id="-step-1-ingredients">🍽 Step 1: Ingredients</h2>

<blockquote>
  <p>The first area of code I’ll need you to fix is my ingredients planner. I use this to print what kind of salad greens and dressings to use for meals.<br />
Again, the runtime code is working fine. It’s just the type annotations you’ll need to correct.</p>
</blockquote>

<p><strong>▪ 요약: 샐러드 야채와 드레싱 재료 플래너의 타입 애너테이션을 고쳐라!</strong></p>

<h3 id="-문제-코드">📄 문제 코드</h3>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Please correct any type annotation problems here! ✨</span>
<span class="kd">let</span> <span class="nx">arugula</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">dressing</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">lettuce</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">mealDate</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>

<span class="nx">arugula</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="nx">dressing</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">honey dijon</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">lettuce</span> <span class="o">=</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="nx">mealDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">September 13, 2021</span><span class="dl">"</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`We're starting on </span><span class="p">${</span><span class="nx">mealDate</span><span class="p">}</span><span class="s2"> with a dressing of </span><span class="p">${</span><span class="nx">dressing</span><span class="p">}</span><span class="s2">.`</span><span class="p">);</span>

<span class="nf">if </span><span class="p">(</span><span class="nx">arugula</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`There are </span><span class="p">${</span><span class="nx">arugula</span><span class="p">}</span><span class="s2"> arugula serving(s) for this first meal.`</span><span class="p">);</span>
<span class="p">}</span>

<span class="nf">if </span><span class="p">(</span><span class="nx">lettuce</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`There are </span><span class="p">${</span><span class="nx">lettuce</span><span class="p">}</span><span class="s2"> lettuce serving(s) for this first meal.`</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">arugula</span> <span class="o">=</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="nx">dressing</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">balsamic vinaigrette</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">lettuce</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="nx">mealDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">(</span><span class="dl">"</span><span class="s2">March 13, 2022</span><span class="dl">"</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Next up, a </span><span class="p">${</span><span class="nx">mealDate</span><span class="p">}</span><span class="s2"> meal with a dressing of </span><span class="p">${</span><span class="nx">dressing</span><span class="p">}</span><span class="s2">.`</span><span class="p">);</span>

<span class="nf">if </span><span class="p">(</span><span class="nx">arugula</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`This time, there are </span><span class="p">${</span><span class="nx">arugula</span><span class="p">}</span><span class="s2"> arugula serving(s).`</span><span class="p">);</span>
<span class="p">}</span>

<span class="nf">if </span><span class="p">(</span><span class="nx">lettuce</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`This time, there are </span><span class="p">${</span><span class="nx">lettuce</span><span class="p">}</span><span class="s2"> lettuce serving(s).`</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="p">{};</span>
</code></pre></div></div>

<p>코드를 컴파일 하면 다음과 같은 에러가 발생합니다.</p>

<p><img src="https://user-images.githubusercontent.com/56298540/227881136-7f53dfe4-79fd-4351-bc02-5ae9af8023ec.png" alt="image" /></p>

<h3 id="-풀이-과정">📄 풀이 과정</h3>

<p>에러 메시지를 보고 변수 선언부에서 유니언 타입으로 타입을 확장해주었습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">arugula</span><span class="p">:</span> <span class="kr">number</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">dressing</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">lettuce</span><span class="p">:</span> <span class="kr">number</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">mealDate</span><span class="p">:</span> <span class="kr">string</span> <span class="o">|</span> <span class="nb">Date</span><span class="p">;</span>
</code></pre></div></div>

<p>정답 코드를 보니 고쳐야할 점이 있습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">mealDate</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
</code></pre></div></div>

<p>변수 <code class="language-plaintext highlighter-rouge">mealDate</code>는 하나의 타입만 사용합니다.<br />
따라서 유니언 타입을 통해 타입을 확장하는게 아니라, 타입 애너테이션에서 타입을 수정해주면 되는 것이었습니다.<br />
낚였습니다.</p>

<h2 id="-step-2-recipes">🍽 Step 2: Recipes</h2>

<blockquote>
  <p>Those salad ingredients are looking delectable, thank you! Next up is my list of favorite recipes.<br />
It looks like these seem to pass the TypeScript compiler fine as-is. However, there’s a catch: I want to make sure future recipes keep to the same difficulty and group types. Could you please use unions of literal types for them? Both should only have three possible values.<br />
This time, the runtime code is mostly working fine. Except I think I made a typo in one of the group values? You’ll need to fix that. Otherwise it’s just the type annotations you’ll need to correct.</p>
</blockquote>

<p><strong>▪ 요약: 샐러드는 이제 되었으니, 미래의 요리법(?)이 동일한 난이도와 그룹 타입을 갖도록 리터럴 유니언 타입을 사용해라!</strong></p>

<ul>
  <li>작성되는 유니언 타입은 세개의 타입으로 구성됩니다.</li>
</ul>

<h3 id="-문제-코드-1">📄 문제 코드</h3>

<p>이번 문제는 문제 코드를 컴파일해도 에러가 발생하지 않습니다.</p>

<p>목적은 에러 해결이 아닌, 유니언 타입을 사용한 코드 리팩토링입니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Please clarify any overly wide (permissive) type annotations here! ✨</span>
<span class="kd">let</span> <span class="nx">difficulty</span><span class="p">:</span> <span class="kr">number</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">group</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">title</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>

<span class="c1">// Start with something quick and painless to prepare...</span>
<span class="nx">difficulty</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="nx">group</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">appetizer</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">title</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Raspberry Vinaigrette Salad</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`[</span><span class="p">${</span><span class="nx">group</span><span class="p">}</span><span class="s2">] </span><span class="p">${</span><span class="nx">title</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">difficulty</span><span class="p">}</span><span class="s2">/3 difficulty`</span><span class="p">);</span>

<span class="c1">// Next up, a nice hearty dish to center the meal...</span>
<span class="nx">difficulty</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="nx">group</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">entree</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">title</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Cauliflower Steaks</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`[</span><span class="p">${</span><span class="nx">group</span><span class="p">}</span><span class="s2">] </span><span class="p">${</span><span class="nx">title</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">difficulty</span><span class="p">}</span><span class="s2">/3 difficulty`</span><span class="p">);</span>

<span class="c1">// Make a real impact with fancy delectable desserts...</span>
<span class="nx">difficulty</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="nx">group</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">dessert</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">title</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Coconut Chocolate Ganache</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`[</span><span class="p">${</span><span class="nx">group</span><span class="p">}</span><span class="s2">] </span><span class="p">${</span><span class="nx">title</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">difficulty</span><span class="p">}</span><span class="s2">/3 difficulty`</span><span class="p">);</span>

<span class="c1">// Send everyone off with a nice closer.</span>
<span class="nx">difficulty</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="nx">group</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">desert</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">title</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Biscuits and Coffee</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`[</span><span class="p">${</span><span class="nx">group</span><span class="p">}</span><span class="s2">] </span><span class="p">${</span><span class="nx">title</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">difficulty</span><span class="p">}</span><span class="s2">/3 difficulty`</span><span class="p">);</span>

<span class="k">export</span> <span class="p">{};</span>
</code></pre></div></div>

<h3 id="-풀이-과정-1">📄 풀이 과정</h3>

<p>정해진 값을 사용하는 변수는 <code class="language-plaintext highlighter-rouge">difficulty</code>와 <code class="language-plaintext highlighter-rouge">group</code>으로 보입니다.</p>

<p>이 변수들이 사용하는 값을 리터럴 타입으로 사용해서 유니언 타입으로 타입을 구체화 시켜보겠습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">difficulty</span><span class="p">:</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="mi">3</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">group</span><span class="p">:</span> <span class="dl">"</span><span class="s2">appetizer</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">entree</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">dessert</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">title</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
</code></pre></div></div>

<p>유니언 타입을 작성하다보니 문제 제공자의 오타가 보입니다.</p>

<p>설마 레시피에 ‘desert(사막)`를 뜻하는 단어를 사용하진 않을 것 같은데요.</p>

<p>정답 코드에는 <code class="language-plaintext highlighter-rouge">dessert</code>로 올바르게 작성되어 있습니다.</p>

<p>너무 사소한 실수라 해당 레포에 pr를 날려볼까 고민하다 어떤 사람은 <code class="language-plaintext highlighter-rouge">a</code>하나로도 pr를 작성하길래 pr를 작성해보기로 결심했습니다.</p>

<p>아니면 조슈아 골든버그씨가 말해주겠죠.</p>

<p>🖇 <a href="https://github.com/LearningTypeScript/projects/pull/259">인생 처음 오픈소스 PR</a></p>

<h2 id="-step3-seating">🍽 Step3: Seating</h2>

<blockquote>
  <p>You’re doing wonderfully, my friend. I can’t wait to invite you to my next fancy dinner party.<br />
Speaking of which, I need to properly type the program to randomize invitations and seat assignments. My friends can be kind of childish -they’re babies, really- and are very picky about seating.<br />
I also very much like what you did with the string literal union types in the last step. Could you please avoid using the string type altogether in this one? Just use literal types.<br />
Oh, and I think there’s a typo in one of the names here too.</p>
</blockquote>

<p><strong>▪ 요약: 저번 step에서 네가 만든 string 리터럴 유니언 타입 맘에 들었어. 이번엔 string타입을 사용하지말고 리터럴 타입만 사용해서 타입을 완성시켜봐라!</strong></p>

<h3 id="-문제-코드-2">📄 문제 코드</h3>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Please fill in any missing type annotations here...</span>
<span class="kd">const</span> <span class="nx">headOfTable</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Me!</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">adjacentLeft</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">adjacentRight</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">furtherLeft</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">furtherRight</span><span class="p">;</span>

<span class="c1">// I always invite Susie and Tommy! ♥</span>
<span class="nf">if </span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">adjacentLeft</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Susie</span><span class="dl">"</span><span class="p">;</span>
  <span class="nx">adjacentRight</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Tommy</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nx">adjacentLeft</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Tommy</span><span class="dl">"</span><span class="p">;</span>
  <span class="nx">adjacentRight</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Susie</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// I invite Angelica about half of the time. We're not as close as Susie and Tommy. It's a long story.</span>
<span class="c1">// I try to fill `furtherLeft` first...</span>
<span class="nf">if </span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">furtherLeft</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Angelica</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Same with Chuckie. I like them, but do I *really* like hanging out with them? Only sometimes.</span>
<span class="c1">// ...then after that `furtherRight`</span>
<span class="nf">if </span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
  <span class="nf">if </span><span class="p">(</span><span class="nx">furtherLeft</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">furtherRight</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nx">furtherLeft</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// If I invited Angelica but not Chuckie, I'll invite Kimi. They get along well with Angelica but not Chuckie.</span>
<span class="nf">if </span><span class="p">(</span><span class="nx">furtherLeft</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Angelica</span><span class="dl">"</span> <span class="o">&amp;&amp;</span> <span class="nx">furtherRight</span> <span class="o">!==</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">furtherRight</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Kimi</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// If I invited Chuckie but not Angelica, I'll invite Timmy. They get along well with Chuckie but not Angelica.</span>
<span class="nf">if </span><span class="p">(</span><span class="nx">furtherLeft</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">furtherRight</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Timmy</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`At the head of the table is... </span><span class="p">${</span><span class="nx">headOfTable</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Adjacent to the left is: </span><span class="p">${</span><span class="nx">adjacentLeft</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Adjacent to the right is: </span><span class="p">${</span><span class="nx">adjacentRight</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Further down on the left is: </span><span class="p">${</span><span class="nx">adjacentLeft</span> <span class="o">??</span> <span class="dl">"</span><span class="s2">nobody</span><span class="dl">"</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`Further down on the right is: </span><span class="p">${</span><span class="nx">adjacentRight</span> <span class="o">??</span> <span class="dl">"</span><span class="s2">nobody</span><span class="dl">"</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>

<span class="k">export</span> <span class="p">{};</span>
</code></pre></div></div>

<h3 id="-풀이-과정-2">📄 풀이 과정</h3>

<p>변수 선언부를 보니 초깃값이 설정되어 있지 않아, 타입이 <code class="language-plaintext highlighter-rouge">any</code>로 추론되고 있습니다.</p>

<p>변수 선언부에서 리터럴 타입으로 각각 타입을 설정합니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">adjacentLeft</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Susie</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Tommy</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">adjacentRight</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Susie</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Tommy</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">furtherLeft</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Angelica</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">furtherRight</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Kimi</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Timmy</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/56298540/227911602-a53012c3-99c1-47ca-8801-68d04b9dc5bd.png" alt="image" /></p>

<p>값이 할당되기 전에 사용되어 에러를 발생시킵니다.</p>

<p>값이 할당되지 않은 변수를 위해 <code class="language-plaintext highlighter-rouge">undefined</code> 타입을 명시적으로 추가해주었습니다.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">furtherLeft</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Angelica</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">furtherRight</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Kimi</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Timmy</span><span class="dl">"</span> <span class="o">|</span> <span class="dl">"</span><span class="s2">Chuckie</span><span class="dl">"</span> <span class="o">|</span> <span class="kc">undefined</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name>Sujin Kim</name></author><category term="TypeScript" /><category term="learning typescript" /><category term="러닝 타입스크립트" /><category term="Primitive Cooking" /><category term="유니언 타입" /><category term="리터럴 타입" /><summary type="html"><![CDATA[책 learning typescript 3장 유니언과 리터럴 실습 프로젝트 입니다.]]></summary></entry></feed>